<TranslationUnit()> <isa> "TranslationUnit" .
<Var(3:1:3:11)> <isa> "Var" .
<Var(3:1:3:11)> <hasName> "glb" .
<Var(3:1:3:11)> <hasTypeClass> "['Builtin']" .
<Var(3:1:3:11)> <hasType> "int" .
<Var(3:1:3:11)> <hasCanonicalDecl> <Var(3:1:3:11)> .
<Var(3:1:3:11)> <hasDefinition> <Var(3:1:3:11)> .
<Var(3:1:3:11)> <hasInit> <IntegerLiteral(3:11:3:11)> .
<IntegerLiteral(3:11:3:11)> <isa> "IntegerLiteral" .
<Record(5:1:9:1)> <isa> "Record" .
<Record(5:1:9:1)> <hasName> "ts" .
<Record(5:1:9:1)> <hasDefinition> <Record(5:1:9:1)> .
<Record(5:1:9:1)> <hasField> <Field(6:2:6:6)> .
<Record(5:1:9:1)> <hasField> <Field(7:2:7:9)> .
<Record(5:1:9:1)> <hasField> <Field(8:2:8:7)> .
<Field(6:2:6:6)> <isa> "Field" .
<Field(6:2:6:6)> <hasName> "a" .
<Field(6:2:6:6)> <hasTypeClass> "['Builtin']" .
<Field(6:2:6:6)> <hasType> "int" .
<Field(6:2:6:6)> <hasParent> <Record(5:1:9:1)> .
<Field(7:2:7:9)> <isa> "Field" .
<Field(7:2:7:9)> <hasName> "p" .
<Field(7:2:7:9)> <hasTypeClass> "['PointerType','Builtin']" .
<Field(7:2:7:9)> <hasType> "float *" .
<Field(7:2:7:9)> <hasParent> <Record(5:1:9:1)> .
<Field(8:2:8:7)> <isa> "Field" .
<Field(8:2:8:7)> <hasName> "c" .
<Field(8:2:8:7)> <hasTypeClass> "['Builtin']" .
<Field(8:2:8:7)> <hasType> "char" .
<Field(8:2:8:7)> <hasParent> <Record(5:1:9:1)> .
<Typedef(11:1:11:19)> <isa> "Typedef" .
<Typedef(11:1:11:19)> <hasName> "T" .
<Typedef(11:1:11:19)> <hasUnderlyingType> "struct ts" .
<Typedef(11:1:11:19)> <hasCanonicalType> "struct ts" .
<Typedef(11:1:11:19)> <hasCanonicalDecl> <Typedef(11:1:11:19)> .
<Function(13:1:13:14)> <isa> "Function" .
<Function(13:1:13:14)> <hasName> "foo" .
<Function(13:1:13:14)> <hasTypeClass> "['FunctionProto']" .
<Function(13:1:13:14)> <hasType> "int (int)" .
<Function(13:1:13:14)> <hasParm(0)> <ParmVar(13:9:13:13)> .
<ParmVar(13:9:13:13)> <isa> "ParmVar" .
<ParmVar(13:9:13:13)> <hasName> "a" .
<ParmVar(13:9:13:13)> <hasTypeClass> "['Builtin']" .
<ParmVar(13:9:13:13)> <hasType> "int" .
<ParmVar(13:9:13:13)> <hasCanonicalDecl> <ParmVar(13:9:13:13)> .
<ParmVar(13:9:13:13)> <hasDefinition> <ParmVar(13:9:13:13)> .
<Function(15:1:17:1)> <isa> "Function" .
<Function(15:1:17:1)> <hasName> "id" .
<Function(15:1:17:1)> <hasTypeClass> "['FunctionProto']" .
<Function(15:1:17:1)> <hasType> "float *(float *)" .
<Function(15:1:17:1)> <hasBody> <CompoundStmt(15:22:17:1)> .
<Function(15:1:17:1)> <hasParm(0)> <ParmVar(15:12:15:19)> .
<ParmVar(15:12:15:19)> <isa> "ParmVar" .
<ParmVar(15:12:15:19)> <hasName> "f" .
<ParmVar(15:12:15:19)> <hasTypeClass> "['PointerType','Builtin']" .
<ParmVar(15:12:15:19)> <hasType> "float *" .
<ParmVar(15:12:15:19)> <hasCanonicalDecl> <ParmVar(15:12:15:19)> .
<ParmVar(15:12:15:19)> <hasDefinition> <ParmVar(15:12:15:19)> .
<CompoundStmt(15:22:17:1)> <isa> "CompoundStmt" .
<ReturnStmt(16:2:16:9)> <isa> "ReturnStmt" .
<ReturnStmt(16:2:16:9)> <returns> <DeclRefExpr(16:9:16:9)> .
<ReturnStmt(16:2:16:9)> <inProc> <Function(15:1:17:1)> .
<ImplicitCastExpr(16:9:16:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(16:9:16:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(16:9:16:9)> <hasSubExpr> <DeclRefExpr(16:9:16:9)> .
<DeclRefExpr(16:9:16:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(16:9:16:9)> <hasDecl> <ParmVar(15:12:15:19)> .
<DeclRefExpr(16:9:16:9)> <hasName> "f" .
<Function(19:1:21:1)> <isa> "Function" .
<Function(19:1:21:1)> <hasName> "plus" .
<Function(19:1:21:1)> <hasTypeClass> "['FunctionProto']" .
<Function(19:1:21:1)> <hasType> "int (int, int)" .
<Function(19:1:21:1)> <hasBody> <CompoundStmt(19:24:21:1)> .
<Function(19:1:21:1)> <hasParm(0)> <ParmVar(19:10:19:14)> .
<Function(19:1:21:1)> <hasParm(1)> <ParmVar(19:17:19:21)> .
<ParmVar(19:10:19:14)> <isa> "ParmVar" .
<ParmVar(19:10:19:14)> <hasName> "a" .
<ParmVar(19:10:19:14)> <hasTypeClass> "['Builtin']" .
<ParmVar(19:10:19:14)> <hasType> "int" .
<ParmVar(19:10:19:14)> <hasCanonicalDecl> <ParmVar(19:10:19:14)> .
<ParmVar(19:10:19:14)> <hasDefinition> <ParmVar(19:10:19:14)> .
<ParmVar(19:17:19:21)> <isa> "ParmVar" .
<ParmVar(19:17:19:21)> <hasName> "b" .
<ParmVar(19:17:19:21)> <hasTypeClass> "['Builtin']" .
<ParmVar(19:17:19:21)> <hasType> "int" .
<ParmVar(19:17:19:21)> <hasCanonicalDecl> <ParmVar(19:17:19:21)> .
<ParmVar(19:17:19:21)> <hasDefinition> <ParmVar(19:17:19:21)> .
<CompoundStmt(19:24:21:1)> <isa> "CompoundStmt" .
<ReturnStmt(20:2:20:13)> <isa> "ReturnStmt" .
<ReturnStmt(20:2:20:13)> <returns> <BinaryOperator(20:9:20:13)> .
<ReturnStmt(20:2:20:13)> <inProc> <Function(19:1:21:1)> .
<BinaryOperator(20:9:20:13)> <isa> "BinaryOperator" .
<BinaryOperator(20:9:20:13)> <hasOperator> "+" .
<BinaryOperator(20:9:20:13)> <hasLHS> <DeclRefExpr(20:9:20:9)> .
<BinaryOperator(20:9:20:13)> <hasRHS> <DeclRefExpr(20:13:20:13)> .
<ImplicitCastExpr(20:9:20:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(20:9:20:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(20:9:20:9)> <hasSubExpr> <DeclRefExpr(20:9:20:9)> .
<DeclRefExpr(20:9:20:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(20:9:20:9)> <hasDecl> <ParmVar(19:10:19:14)> .
<DeclRefExpr(20:9:20:9)> <hasName> "a" .
<ImplicitCastExpr(20:13:20:13)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(20:13:20:13)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(20:13:20:13)> <hasSubExpr> <DeclRefExpr(20:13:20:13)> .
<DeclRefExpr(20:13:20:13)> <isa> "DeclRefExpr" .
<DeclRefExpr(20:13:20:13)> <hasDecl> <ParmVar(19:17:19:21)> .
<DeclRefExpr(20:13:20:13)> <hasName> "b" .
<Function(23:1:25:1)> <isa> "Function" .
<Function(23:1:25:1)> <hasName> "plus2" .
<Function(23:1:25:1)> <hasTypeClass> "['FunctionProto']" .
<Function(23:1:25:1)> <hasType> "int (int *, int *)" .
<Function(23:1:25:1)> <hasBody> <CompoundStmt(23:27:25:1)> .
<Function(23:1:25:1)> <hasParm(0)> <ParmVar(23:11:23:16)> .
<Function(23:1:25:1)> <hasParm(1)> <ParmVar(23:19:23:24)> .
<ParmVar(23:11:23:16)> <isa> "ParmVar" .
<ParmVar(23:11:23:16)> <hasName> "a" .
<ParmVar(23:11:23:16)> <hasTypeClass> "['PointerType','Builtin']" .
<ParmVar(23:11:23:16)> <hasType> "int *" .
<ParmVar(23:11:23:16)> <hasCanonicalDecl> <ParmVar(23:11:23:16)> .
<ParmVar(23:11:23:16)> <hasDefinition> <ParmVar(23:11:23:16)> .
<ParmVar(23:19:23:24)> <isa> "ParmVar" .
<ParmVar(23:19:23:24)> <hasName> "b" .
<ParmVar(23:19:23:24)> <hasTypeClass> "['PointerType','Builtin']" .
<ParmVar(23:19:23:24)> <hasType> "int *" .
<ParmVar(23:19:23:24)> <hasCanonicalDecl> <ParmVar(23:19:23:24)> .
<ParmVar(23:19:23:24)> <hasDefinition> <ParmVar(23:19:23:24)> .
<CompoundStmt(23:27:25:1)> <isa> "CompoundStmt" .
<ReturnStmt(24:2:24:17)> <isa> "ReturnStmt" .
<ReturnStmt(24:2:24:17)> <returns> <BinaryOperator(24:10:24:16)> .
<ReturnStmt(24:2:24:17)> <inProc> <Function(23:1:25:1)> .
<ParenExpr(24:9:24:17)> <isa> "ParenExpr" .
<BinaryOperator(24:10:24:16)> <isa> "BinaryOperator" .
<BinaryOperator(24:10:24:16)> <hasOperator> "+" .
<BinaryOperator(24:10:24:16)> <hasLHS> <UnaryOperator(24:10:24:11)> .
<BinaryOperator(24:10:24:16)> <hasRHS> <UnaryOperator(24:15:24:16)> .
<ImplicitCastExpr(24:10:24:11)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(24:10:24:11)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(24:10:24:11)> <hasSubExpr> <UnaryOperator(24:10:24:11)> .
<UnaryOperator(24:10:24:11)> <isa> "UnaryOperator" .
<UnaryOperator(24:10:24:11)> <hasOperator> "*" .
<UnaryOperator(24:10:24:11)> <hasSubExpr> <DeclRefExpr(24:11:24:11)> .
<ImplicitCastExpr(24:11:24:11)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(24:11:24:11)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(24:11:24:11)> <hasSubExpr> <DeclRefExpr(24:11:24:11)> .
<DeclRefExpr(24:11:24:11)> <isa> "DeclRefExpr" .
<DeclRefExpr(24:11:24:11)> <hasDecl> <ParmVar(23:11:23:16)> .
<DeclRefExpr(24:11:24:11)> <hasName> "a" .
<ImplicitCastExpr(24:15:24:16)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(24:15:24:16)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(24:15:24:16)> <hasSubExpr> <UnaryOperator(24:15:24:16)> .
<UnaryOperator(24:15:24:16)> <isa> "UnaryOperator" .
<UnaryOperator(24:15:24:16)> <hasOperator> "*" .
<UnaryOperator(24:15:24:16)> <hasSubExpr> <DeclRefExpr(24:16:24:16)> .
<ImplicitCastExpr(24:16:24:16)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(24:16:24:16)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(24:16:24:16)> <hasSubExpr> <DeclRefExpr(24:16:24:16)> .
<DeclRefExpr(24:16:24:16)> <isa> "DeclRefExpr" .
<DeclRefExpr(24:16:24:16)> <hasDecl> <ParmVar(23:19:23:24)> .
<DeclRefExpr(24:16:24:16)> <hasName> "b" .
<Function(27:1:82:1)> <isa> "Function" .
<Function(27:1:82:1)> <hasName> "main" .
<Function(27:1:82:1)> <hasTypeClass> "['FunctionNoProto']" .
<Function(27:1:82:1)> <hasType> "int ()" .
<Function(27:1:82:1)> <isa> "MainFunction" .
<Function(27:1:82:1)> <hasBody> <CompoundStmt(27:12:82:1)> .
<CompoundStmt(27:12:82:1)> <isa> "CompoundStmt" .
<DeclStmt(28:2:28:7)> <isa> "DeclStmt" .
<Var(28:2:28:6)> <isa> "Var" .
<Var(28:2:28:6)> <hasName> "c" .
<Var(28:2:28:6)> <hasTypeClass> "['Builtin']" .
<Var(28:2:28:6)> <hasType> "int" .
<Var(28:2:28:6)> <isa> "LocalVarDecl" .
<Var(28:2:28:6)> <hasCanonicalDecl> <Var(28:2:28:6)> .
<Var(28:2:28:6)> <hasDefinition> <Var(28:2:28:6)> .
<DeclStmt(29:2:29:20)> <isa> "DeclStmt" .
<Var(29:2:29:12)> <isa> "Var" .
<Var(29:2:29:12)> <hasName> "f" .
<Var(29:2:29:12)> <hasTypeClass> "['Builtin']" .
<Var(29:2:29:12)> <hasType> "float" .
<Var(29:2:29:12)> <isa> "LocalVarDecl" .
<Var(29:2:29:12)> <hasCanonicalDecl> <Var(29:2:29:12)> .
<Var(29:2:29:12)> <hasDefinition> <Var(29:2:29:12)> .
<Var(29:2:29:12)> <hasInit> <FloatingLiteral(29:12:29:12)> .
<ImplicitCastExpr(29:12:29:12)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(29:12:29:12)> <hasCastKind> "FloatingCast" .
<ImplicitCastExpr(29:12:29:12)> <hasSubExpr> <FloatingLiteral(29:12:29:12)> .
<FloatingLiteral(29:12:29:12)> <isa> "FloatingLiteral" .
<Var(29:2:29:18)> <isa> "Var" .
<Var(29:2:29:18)> <hasName> "fp" .
<Var(29:2:29:18)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(29:2:29:18)> <hasType> "float *" .
<Var(29:2:29:18)> <isa> "LocalVarDecl" .
<Var(29:2:29:18)> <hasCanonicalDecl> <Var(29:2:29:18)> .
<Var(29:2:29:18)> <hasDefinition> <Var(29:2:29:18)> .
<DeclStmt(30:2:30:15)> <isa> "DeclStmt" .
<Var(30:2:30:7)> <isa> "Var" .
<Var(30:2:30:7)> <hasName> "cp" .
<Var(30:2:30:7)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(30:2:30:7)> <hasType> "int *" .
<Var(30:2:30:7)> <isa> "LocalVarDecl" .
<Var(30:2:30:7)> <hasCanonicalDecl> <Var(30:2:30:7)> .
<Var(30:2:30:7)> <hasDefinition> <Var(30:2:30:7)> .
<Var(30:2:30:12)> <isa> "Var" .
<Var(30:2:30:12)> <hasName> "cp2" .
<Var(30:2:30:12)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(30:2:30:12)> <hasType> "int *" .
<Var(30:2:30:12)> <isa> "LocalVarDecl" .
<Var(30:2:30:12)> <hasCanonicalDecl> <Var(30:2:30:12)> .
<Var(30:2:30:12)> <hasDefinition> <Var(30:2:30:12)> .
<DeclStmt(31:2:31:13)> <isa> "DeclStmt" .
<Var(31:2:31:10)> <isa> "Var" .
<Var(31:2:31:10)> <hasName> "fpp" .
<Var(31:2:31:10)> <hasTypeClass> "['PointerType','PointerType','Builtin']" .
<Var(31:2:31:10)> <hasType> "float **" .
<Var(31:2:31:10)> <isa> "LocalVarDecl" .
<Var(31:2:31:10)> <hasCanonicalDecl> <Var(31:2:31:10)> .
<Var(31:2:31:10)> <hasDefinition> <Var(31:2:31:10)> .
<DeclStmt(32:2:32:12)> <isa> "DeclStmt" .
<Var(32:2:32:4)> <isa> "Var" .
<Var(32:2:32:4)> <hasName> "st" .
<Var(32:2:32:4)> <hasTypeClass> "['Typedef']" .
<Var(32:2:32:4)> <hasType> "T" .
<Var(32:2:32:4)> <isa> "LocalVarDecl" .
<Var(32:2:32:4)> <hasCanonicalDecl> <Var(32:2:32:4)> .
<Var(32:2:32:4)> <hasDefinition> <Var(32:2:32:4)> .
<Var(32:2:32:9)> <isa> "Var" .
<Var(32:2:32:9)> <hasName> "stp" .
<Var(32:2:32:9)> <hasTypeClass> "['PointerType','Typedef']" .
<Var(32:2:32:9)> <hasType> "T *" .
<Var(32:2:32:9)> <isa> "LocalVarDecl" .
<Var(32:2:32:9)> <hasCanonicalDecl> <Var(32:2:32:9)> .
<Var(32:2:32:9)> <hasDefinition> <Var(32:2:32:9)> .
<DeclStmt(34:2:34:31)> <isa> "DeclStmt" .
<Var(34:2:34:30)> <isa> "Var" .
<Var(34:2:34:30)> <hasName> "parr" .
<Var(34:2:34:30)> <hasTypeClass> "['ConstantArray']" .
<Var(34:2:34:30)> <hasElementTypeClass> "['PointerType','Builtin']" .
<Var(34:2:34:30)> <hasType> "float *[3]" .
<Var(34:2:34:30)> <isa> "LocalVarDecl" .
<Var(34:2:34:30)> <hasCanonicalDecl> <Var(34:2:34:30)> .
<Var(34:2:34:30)> <hasDefinition> <Var(34:2:34:30)> .
<Var(34:2:34:30)> <hasInit> <InitListExpr(34:19:34:30)> .
<IntegerLiteral(34:14:34:14)> <isa> "IntegerLiteral" .
<InitListExpr(34:19:34:30)> <isa> "InitListExpr" .
<InitListExpr(34:19:34:30)> <hasSubInit(0)> "ImplicitValueInitExpr()" .
<InitListExpr(34:19:34:30)> <hasSubInit(1)> <UnaryOperator(34:27:34:28)> .
<DesignatedInitExpr(34:21:34:28)> <isa> "DesignatedInitExpr" .
<UnaryOperator(34:27:34:28)> <isa> "UnaryOperator" .
<UnaryOperator(34:27:34:28)> <hasOperator> "&" .
<UnaryOperator(34:27:34:28)> <hasSubExpr> <DeclRefExpr(34:28:34:28)> .
<DeclRefExpr(34:28:34:28)> <isa> "DeclRefExpr" .
<DeclRefExpr(34:28:34:28)> <hasDecl> <Var(29:2:29:12)> .
<DeclRefExpr(34:28:34:28)> <hasName> "f" .
<IntegerLiteral(34:22:34:22)> <isa> "IntegerLiteral" .
<InitListExpr(34:19:34:30)> <isa> "InitListExpr" .
<InitListExpr(34:19:34:30)> <hasSubInit(0)> "ImplicitValueInitExpr()" .
<InitListExpr(34:19:34:30)> <hasSubInit(1)> <UnaryOperator(34:27:34:28)> .
<ImplicitValueInitExpr()> <isa> "ImplicitValueInitExpr" .
<UnaryOperator(34:27:34:28)> <isa> "UnaryOperator" .
<UnaryOperator(34:27:34:28)> <hasOperator> "&" .
<UnaryOperator(34:27:34:28)> <hasSubExpr> <DeclRefExpr(34:28:34:28)> .
<DeclRefExpr(34:28:34:28)> <isa> "DeclRefExpr" .
<DeclRefExpr(34:28:34:28)> <hasDecl> <Var(29:2:29:12)> .
<DeclRefExpr(34:28:34:28)> <hasName> "f" .
<DeclStmt(36:2:36:48)> <isa> "DeclStmt" .
<Var(36:2:36:47)> <isa> "Var" .
<Var(36:2:36:47)> <hasName> "pl" .
<Var(36:2:36:47)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(36:2:36:47)> <hasType> "float *" .
<Var(36:2:36:47)> <isa> "LocalVarDecl" .
<Var(36:2:36:47)> <hasCanonicalDecl> <Var(36:2:36:47)> .
<Var(36:2:36:47)> <hasDefinition> <Var(36:2:36:47)> .
<Var(36:2:36:47)> <hasInit> <CallExpr(36:23:36:47)> .
<CStyleCastExpr(36:14:36:47)> <isa> "CStyleCastExpr" .
<CStyleCastExpr(36:14:36:47)> <hasCastKind> "BitCast" .
<CStyleCastExpr(36:14:36:47)> <hasSubExpr> <CallExpr(36:23:36:47)> .
<CallExpr(36:23:36:47)> <isa> "CallExpr" .
<CallExpr(36:23:36:47)> <callsFunc> <Function(466:1:211:58)> .
<CallExpr(36:23:36:47)> <calls> "malloc" .
<CallExpr(36:23:36:47)> <hasArg(0)> <BinaryOperator(36:30:36:46)> .
<ImplicitCastExpr(36:23:36:23)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(36:23:36:23)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(36:23:36:23)> <hasSubExpr> <DeclRefExpr(36:23:36:23)> .
<DeclRefExpr(36:23:36:23)> <isa> "DeclRefExpr" .
<DeclRefExpr(36:23:36:23)> <hasDecl> <Function(466:1:211:58)> .
<DeclRefExpr(36:23:36:23)> <hasName> "malloc" .
<BinaryOperator(36:30:36:46)> <isa> "BinaryOperator" .
<BinaryOperator(36:30:36:46)> <hasOperator> "*" .
<BinaryOperator(36:30:36:46)> <hasLHS> <IntegerLiteral(36:30:36:30)> .
<BinaryOperator(36:30:36:46)> <hasRHS> <UnaryExprOrTypeTraitExpr(36:34:36:46)> .
<ImplicitCastExpr(36:30:36:30)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(36:30:36:30)> <hasCastKind> "IntegralCast" .
<ImplicitCastExpr(36:30:36:30)> <hasSubExpr> <IntegerLiteral(36:30:36:30)> .
<IntegerLiteral(36:30:36:30)> <isa> "IntegerLiteral" .
<UnaryExprOrTypeTraitExpr(36:34:36:46)> <isa> "UnaryExprOrTypeTraitExpr" .
<DeclStmt(37:2:37:12)> <isa> "DeclStmt" .
<Var(37:2:37:9)> <isa> "Var" .
<Var(37:2:37:9)> <hasName> "pl2" .
<Var(37:2:37:9)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(37:2:37:9)> <hasType> "float *" .
<Var(37:2:37:9)> <isa> "LocalVarDecl" .
<Var(37:2:37:9)> <hasCanonicalDecl> <Var(37:2:37:9)> .
<Var(37:2:37:9)> <hasDefinition> <Var(37:2:37:9)> .
<BinaryOperator(38:2:38:41)> <isa> "BinaryOperator" .
<BinaryOperator(38:2:38:41)> <hasOperator> "=" .
<BinaryOperator(38:2:38:41)> <hasLHS> <DeclRefExpr(38:2:38:2)> .
<BinaryOperator(38:2:38:41)> <hasRHS> <CallExpr(38:17:38:41)> .
<BinaryOperator(38:2:38:41)> <isa> "AssignmentOp" .
<DeclRefExpr(38:2:38:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(38:2:38:2)> <hasDecl> <Var(37:2:37:9)> .
<DeclRefExpr(38:2:38:2)> <hasName> "pl2" .
<CStyleCastExpr(38:8:38:41)> <isa> "CStyleCastExpr" .
<CStyleCastExpr(38:8:38:41)> <hasCastKind> "BitCast" .
<CStyleCastExpr(38:8:38:41)> <hasSubExpr> <CallExpr(38:17:38:41)> .
<CallExpr(38:17:38:41)> <isa> "CallExpr" .
<CallExpr(38:17:38:41)> <callsFunc> <Function(466:1:211:58)> .
<CallExpr(38:17:38:41)> <calls> "malloc" .
<CallExpr(38:17:38:41)> <hasArg(0)> <BinaryOperator(38:24:38:40)> .
<ImplicitCastExpr(38:17:38:17)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(38:17:38:17)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(38:17:38:17)> <hasSubExpr> <DeclRefExpr(38:17:38:17)> .
<DeclRefExpr(38:17:38:17)> <isa> "DeclRefExpr" .
<DeclRefExpr(38:17:38:17)> <hasDecl> <Function(466:1:211:58)> .
<DeclRefExpr(38:17:38:17)> <hasName> "malloc" .
<BinaryOperator(38:24:38:40)> <isa> "BinaryOperator" .
<BinaryOperator(38:24:38:40)> <hasOperator> "*" .
<BinaryOperator(38:24:38:40)> <hasLHS> <IntegerLiteral(38:24:38:24)> .
<BinaryOperator(38:24:38:40)> <hasRHS> <UnaryExprOrTypeTraitExpr(38:28:38:40)> .
<ImplicitCastExpr(38:24:38:24)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(38:24:38:24)> <hasCastKind> "IntegralCast" .
<ImplicitCastExpr(38:24:38:24)> <hasSubExpr> <IntegerLiteral(38:24:38:24)> .
<IntegerLiteral(38:24:38:24)> <isa> "IntegerLiteral" .
<UnaryExprOrTypeTraitExpr(38:28:38:40)> <isa> "UnaryExprOrTypeTraitExpr" .
<ForStmt(40:2:43:2)> <isa> "ForStmt" .
<DeclStmt(40:7:40:16)> <isa> "DeclStmt" .
<Var(40:7:40:15)> <isa> "Var" .
<Var(40:7:40:15)> <hasName> "i" .
<Var(40:7:40:15)> <hasTypeClass> "['Builtin']" .
<Var(40:7:40:15)> <hasType> "int" .
<Var(40:7:40:15)> <isa> "LocalVarDecl" .
<Var(40:7:40:15)> <hasCanonicalDecl> <Var(40:7:40:15)> .
<Var(40:7:40:15)> <hasDefinition> <Var(40:7:40:15)> .
<Var(40:7:40:15)> <hasInit> <IntegerLiteral(40:15:40:15)> .
<IntegerLiteral(40:15:40:15)> <isa> "IntegerLiteral" .
<BinaryOperator(40:18:40:22)> <isa> "BinaryOperator" .
<BinaryOperator(40:18:40:22)> <hasOperator> "<" .
<BinaryOperator(40:18:40:22)> <hasLHS> <DeclRefExpr(40:18:40:18)> .
<BinaryOperator(40:18:40:22)> <hasRHS> <IntegerLiteral(40:22:40:22)> .
<ImplicitCastExpr(40:18:40:18)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(40:18:40:18)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(40:18:40:18)> <hasSubExpr> <DeclRefExpr(40:18:40:18)> .
<DeclRefExpr(40:18:40:18)> <isa> "DeclRefExpr" .
<DeclRefExpr(40:18:40:18)> <hasDecl> <Var(40:7:40:15)> .
<DeclRefExpr(40:18:40:18)> <hasName> "i" .
<IntegerLiteral(40:22:40:22)> <isa> "IntegerLiteral" .
<UnaryOperator(40:25:40:27)> <isa> "UnaryOperator" .
<UnaryOperator(40:25:40:27)> <hasOperator> "++" .
<UnaryOperator(40:25:40:27)> <hasSubExpr> <DeclRefExpr(40:27:40:27)> .
<DeclRefExpr(40:27:40:27)> <isa> "DeclRefExpr" .
<DeclRefExpr(40:27:40:27)> <hasDecl> <Var(40:7:40:15)> .
<DeclRefExpr(40:27:40:27)> <hasName> "i" .
<CompoundStmt(41:2:43:2)> <isa> "CompoundStmt" .
<BinaryOperator(42:3:42:11)> <isa> "BinaryOperator" .
<BinaryOperator(42:3:42:11)> <hasOperator> "=" .
<BinaryOperator(42:3:42:11)> <hasLHS> <ArraySubscriptExpr(42:3:42:7)> .
<BinaryOperator(42:3:42:11)> <hasRHS> <DeclRefExpr(42:11:42:11)> .
<BinaryOperator(42:3:42:11)> <isa> "AssignmentOp" .
<ArraySubscriptExpr(42:3:42:7)> <isa> "ArraySubscriptExpr" .
<ArraySubscriptExpr(42:3:42:7)> <hasBase> <DeclRefExpr(42:3:42:3)> .
<ArraySubscriptExpr(42:3:42:7)> <hasIndex> <DeclRefExpr(42:6:42:6)> .
<ImplicitCastExpr(42:3:42:3)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(42:3:42:3)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(42:3:42:3)> <hasSubExpr> <DeclRefExpr(42:3:42:3)> .
<DeclRefExpr(42:3:42:3)> <isa> "DeclRefExpr" .
<DeclRefExpr(42:3:42:3)> <hasDecl> <Var(36:2:36:47)> .
<DeclRefExpr(42:3:42:3)> <hasName> "pl" .
<ImplicitCastExpr(42:6:42:6)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(42:6:42:6)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(42:6:42:6)> <hasSubExpr> <DeclRefExpr(42:6:42:6)> .
<DeclRefExpr(42:6:42:6)> <isa> "DeclRefExpr" .
<DeclRefExpr(42:6:42:6)> <hasDecl> <Var(40:7:40:15)> .
<DeclRefExpr(42:6:42:6)> <hasName> "i" .
<ImplicitCastExpr(42:11:42:11)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(42:11:42:11)> <hasCastKind> "IntegralToFloating" .
<ImplicitCastExpr(42:11:42:11)> <hasSubExpr> <ImplicitCastExpr(42:11:42:11)> .
<ImplicitCastExpr(42:11:42:11)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(42:11:42:11)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(42:11:42:11)> <hasSubExpr> <DeclRefExpr(42:11:42:11)> .
<DeclRefExpr(42:11:42:11)> <isa> "DeclRefExpr" .
<DeclRefExpr(42:11:42:11)> <hasDecl> <Var(40:7:40:15)> .
<DeclRefExpr(42:11:42:11)> <hasName> "i" .
<BinaryOperator(45:2:45:6)> <isa> "BinaryOperator" .
<BinaryOperator(45:2:45:6)> <hasOperator> "=" .
<BinaryOperator(45:2:45:6)> <hasLHS> <DeclRefExpr(45:2:45:2)> .
<BinaryOperator(45:2:45:6)> <hasRHS> <IntegerLiteral(45:6:45:6)> .
<BinaryOperator(45:2:45:6)> <isa> "AssignmentOp" .
<DeclRefExpr(45:2:45:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(45:2:45:2)> <hasDecl> <Var(28:2:28:6)> .
<DeclRefExpr(45:2:45:2)> <hasName> "c" .
<IntegerLiteral(45:6:45:6)> <isa> "IntegerLiteral" .
<BinaryOperator(46:2:46:9)> <isa> "BinaryOperator" .
<BinaryOperator(46:2:46:9)> <hasOperator> "=" .
<BinaryOperator(46:2:46:9)> <hasLHS> <MemberExpr(46:2:46:5)> .
<BinaryOperator(46:2:46:9)> <hasRHS> <DeclRefExpr(46:9:46:9)> .
<BinaryOperator(46:2:46:9)> <isa> "AssignmentOp" .
<MemberExpr(46:2:46:5)> <isa> "MemberExpr" .
<MemberExpr(46:2:46:5)> <hasBase> <DeclRefExpr(46:2:46:2)> .
<MemberExpr(46:2:46:5)> <hasMemberDecl> <Field(6:2:6:6)> .
<DeclRefExpr(46:2:46:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(46:2:46:2)> <hasDecl> <Var(32:2:32:4)> .
<DeclRefExpr(46:2:46:2)> <hasName> "st" .
<ImplicitCastExpr(46:9:46:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(46:9:46:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(46:9:46:9)> <hasSubExpr> <DeclRefExpr(46:9:46:9)> .
<DeclRefExpr(46:9:46:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(46:9:46:9)> <hasDecl> <Var(28:2:28:6)> .
<DeclRefExpr(46:9:46:9)> <hasName> "c" .
<BinaryOperator(48:2:48:8)> <isa> "BinaryOperator" .
<BinaryOperator(48:2:48:8)> <hasOperator> "=" .
<BinaryOperator(48:2:48:8)> <hasLHS> <DeclRefExpr(48:2:48:2)> .
<BinaryOperator(48:2:48:8)> <hasRHS> <UnaryOperator(48:7:48:8)> .
<BinaryOperator(48:2:48:8)> <isa> "AssignmentOp" .
<DeclRefExpr(48:2:48:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(48:2:48:2)> <hasDecl> <Var(30:2:30:7)> .
<DeclRefExpr(48:2:48:2)> <hasName> "cp" .
<UnaryOperator(48:7:48:8)> <isa> "UnaryOperator" .
<UnaryOperator(48:7:48:8)> <hasOperator> "&" .
<UnaryOperator(48:7:48:8)> <hasSubExpr> <DeclRefExpr(48:8:48:8)> .
<DeclRefExpr(48:8:48:8)> <isa> "DeclRefExpr" .
<DeclRefExpr(48:8:48:8)> <hasDecl> <Var(28:2:28:6)> .
<DeclRefExpr(48:8:48:8)> <hasName> "c" .
<CompoundAssignOperator(49:2:49:9)> <isa> "CompoundAssignOperator" .
<CompoundAssignOperator(49:2:49:9)> <hasOperator> "+=" .
<CompoundAssignOperator(49:2:49:9)> <hasLHS> <UnaryOperator(49:2:49:3)> .
<CompoundAssignOperator(49:2:49:9)> <hasRHS> <IntegerLiteral(49:9:49:9)> .
<CompoundAssignOperator(49:2:49:9)> <isa> "AssignmentOp" .
<UnaryOperator(49:2:49:3)> <isa> "UnaryOperator" .
<UnaryOperator(49:2:49:3)> <hasOperator> "*" .
<UnaryOperator(49:2:49:3)> <hasSubExpr> <DeclRefExpr(49:3:49:3)> .
<ImplicitCastExpr(49:3:49:3)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(49:3:49:3)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(49:3:49:3)> <hasSubExpr> <DeclRefExpr(49:3:49:3)> .
<DeclRefExpr(49:3:49:3)> <isa> "DeclRefExpr" .
<DeclRefExpr(49:3:49:3)> <hasDecl> <Var(30:2:30:7)> .
<DeclRefExpr(49:3:49:3)> <hasName> "cp" .
<IntegerLiteral(49:9:49:9)> <isa> "IntegerLiteral" .
<BinaryOperator(51:2:51:8)> <isa> "BinaryOperator" .
<BinaryOperator(51:2:51:8)> <hasOperator> "=" .
<BinaryOperator(51:2:51:8)> <hasLHS> <DeclRefExpr(51:2:51:2)> .
<BinaryOperator(51:2:51:8)> <hasRHS> <DeclRefExpr(51:8:51:8)> .
<BinaryOperator(51:2:51:8)> <isa> "AssignmentOp" .
<DeclRefExpr(51:2:51:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(51:2:51:2)> <hasDecl> <Var(30:2:30:12)> .
<DeclRefExpr(51:2:51:2)> <hasName> "cp2" .
<ImplicitCastExpr(51:8:51:8)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(51:8:51:8)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(51:8:51:8)> <hasSubExpr> <DeclRefExpr(51:8:51:8)> .
<DeclRefExpr(51:8:51:8)> <isa> "DeclRefExpr" .
<DeclRefExpr(51:8:51:8)> <hasDecl> <Var(30:2:30:7)> .
<DeclRefExpr(51:8:51:8)> <hasName> "cp" .
<BinaryOperator(53:2:53:9)> <isa> "BinaryOperator" .
<BinaryOperator(53:2:53:9)> <hasOperator> "=" .
<BinaryOperator(53:2:53:9)> <hasLHS> <DeclRefExpr(53:2:53:2)> .
<BinaryOperator(53:2:53:9)> <hasRHS> <UnaryOperator(53:8:53:9)> .
<BinaryOperator(53:2:53:9)> <isa> "AssignmentOp" .
<DeclRefExpr(53:2:53:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(53:2:53:2)> <hasDecl> <Var(32:2:32:9)> .
<DeclRefExpr(53:2:53:2)> <hasName> "stp" .
<UnaryOperator(53:8:53:9)> <isa> "UnaryOperator" .
<UnaryOperator(53:8:53:9)> <hasOperator> "&" .
<UnaryOperator(53:8:53:9)> <hasSubExpr> <DeclRefExpr(53:9:53:9)> .
<DeclRefExpr(53:9:53:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(53:9:53:9)> <hasDecl> <Var(32:2:32:4)> .
<DeclRefExpr(53:9:53:9)> <hasName> "st" .
<BinaryOperator(55:2:55:12)> <isa> "BinaryOperator" .
<BinaryOperator(55:2:55:12)> <hasOperator> "=" .
<BinaryOperator(55:2:55:12)> <hasLHS> <MemberExpr(55:2:55:7)> .
<BinaryOperator(55:2:55:12)> <hasRHS> <UnaryOperator(55:11:55:12)> .
<BinaryOperator(55:2:55:12)> <isa> "AssignmentOp" .
<MemberExpr(55:2:55:7)> <isa> "MemberExpr" .
<MemberExpr(55:2:55:7)> <hasBase> <DeclRefExpr(55:2:55:2)> .
<MemberExpr(55:2:55:7)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(55:2:55:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(55:2:55:2)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(55:2:55:2)> <hasSubExpr> <DeclRefExpr(55:2:55:2)> .
<DeclRefExpr(55:2:55:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(55:2:55:2)> <hasDecl> <Var(32:2:32:9)> .
<DeclRefExpr(55:2:55:2)> <hasName> "stp" .
<UnaryOperator(55:11:55:12)> <isa> "UnaryOperator" .
<UnaryOperator(55:11:55:12)> <hasOperator> "&" .
<UnaryOperator(55:11:55:12)> <hasSubExpr> <DeclRefExpr(55:12:55:12)> .
<DeclRefExpr(55:12:55:12)> <isa> "DeclRefExpr" .
<DeclRefExpr(55:12:55:12)> <hasDecl> <Var(29:2:29:12)> .
<DeclRefExpr(55:12:55:12)> <hasName> "f" .
<BinaryOperator(56:2:56:16)> <isa> "BinaryOperator" .
<BinaryOperator(56:2:56:16)> <hasOperator> "=" .
<BinaryOperator(56:2:56:16)> <hasLHS> <DeclRefExpr(56:2:56:2)> .
<BinaryOperator(56:2:56:16)> <hasRHS> <UnaryOperator(56:8:56:16)> .
<BinaryOperator(56:2:56:16)> <isa> "AssignmentOp" .
<DeclRefExpr(56:2:56:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(56:2:56:2)> <hasDecl> <Var(31:2:31:10)> .
<DeclRefExpr(56:2:56:2)> <hasName> "fpp" .
<UnaryOperator(56:8:56:16)> <isa> "UnaryOperator" .
<UnaryOperator(56:8:56:16)> <hasOperator> "&" .
<UnaryOperator(56:8:56:16)> <hasSubExpr> <MemberExpr(56:10:56:15)> .
<ParenExpr(56:9:56:16)> <isa> "ParenExpr" .
<MemberExpr(56:10:56:15)> <isa> "MemberExpr" .
<MemberExpr(56:10:56:15)> <hasBase> <DeclRefExpr(56:10:56:10)> .
<MemberExpr(56:10:56:15)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(56:10:56:10)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(56:10:56:10)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(56:10:56:10)> <hasSubExpr> <DeclRefExpr(56:10:56:10)> .
<DeclRefExpr(56:10:56:10)> <isa> "DeclRefExpr" .
<DeclRefExpr(56:10:56:10)> <hasDecl> <Var(32:2:32:9)> .
<DeclRefExpr(56:10:56:10)> <hasName> "stp" .
<CompoundAssignOperator(58:2:58:14)> <isa> "CompoundAssignOperator" .
<CompoundAssignOperator(58:2:58:14)> <hasOperator> "+=" .
<CompoundAssignOperator(58:2:58:14)> <hasLHS> <DeclRefExpr(58:2:58:2)> .
<CompoundAssignOperator(58:2:58:14)> <hasRHS> <UnaryOperator(58:7:58:14)> .
<CompoundAssignOperator(58:2:58:14)> <isa> "AssignmentOp" .
<DeclRefExpr(58:2:58:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(58:2:58:2)> <hasDecl> <Var(29:2:29:12)> .
<DeclRefExpr(58:2:58:2)> <hasName> "f" .
<ImplicitCastExpr(58:7:58:14)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(58:7:58:14)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(58:7:58:14)> <hasSubExpr> <UnaryOperator(58:7:58:14)> .
<UnaryOperator(58:7:58:14)> <isa> "UnaryOperator" .
<UnaryOperator(58:7:58:14)> <hasOperator> "*" .
<UnaryOperator(58:7:58:14)> <hasSubExpr> <ArraySubscriptExpr(58:8:58:14)> .
<ImplicitCastExpr(58:8:58:14)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(58:8:58:14)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(58:8:58:14)> <hasSubExpr> <ArraySubscriptExpr(58:8:58:14)> .
<ArraySubscriptExpr(58:8:58:14)> <isa> "ArraySubscriptExpr" .
<ArraySubscriptExpr(58:8:58:14)> <hasBase> <DeclRefExpr(58:8:58:8)> .
<ArraySubscriptExpr(58:8:58:14)> <hasIndex> <IntegerLiteral(58:13:58:13)> .
<ImplicitCastExpr(58:8:58:8)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(58:8:58:8)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(58:8:58:8)> <hasSubExpr> <DeclRefExpr(58:8:58:8)> .
<DeclRefExpr(58:8:58:8)> <isa> "DeclRefExpr" .
<DeclRefExpr(58:8:58:8)> <hasDecl> <Var(34:2:34:30)> .
<DeclRefExpr(58:8:58:8)> <hasName> "parr" .
<IntegerLiteral(58:13:58:13)> <isa> "IntegerLiteral" .
<BinaryOperator(60:2:60:35)> <isa> "BinaryOperator" .
<BinaryOperator(60:2:60:35)> <hasOperator> "=" .
<BinaryOperator(60:2:60:35)> <hasLHS> <DeclRefExpr(60:2:60:2)> .
<BinaryOperator(60:2:60:35)> <hasRHS> <CallExpr(60:6:60:35)> .
<BinaryOperator(60:2:60:35)> <isa> "AssignmentOp" .
<DeclRefExpr(60:2:60:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(60:2:60:2)> <hasDecl> <Var(28:2:28:6)> .
<DeclRefExpr(60:2:60:2)> <hasName> "c" .
<CallExpr(60:6:60:35)> <isa> "CallExpr" .
<CallExpr(60:6:60:35)> <callsFunc> <Function(19:1:21:1)> .
<CallExpr(60:6:60:35)> <calls> "plus" .
<CallExpr(60:6:60:35)> <hasArg(0)> <ImplicitCastExpr(60:11:60:16)> .
<CallExpr(60:6:60:35)> <hasArg(1)> <CStyleCastExpr(60:19:60:34)> .
<ImplicitCastExpr(60:6:60:6)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(60:6:60:6)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(60:6:60:6)> <hasSubExpr> <DeclRefExpr(60:6:60:6)> .
<DeclRefExpr(60:6:60:6)> <isa> "DeclRefExpr" .
<DeclRefExpr(60:6:60:6)> <hasDecl> <Function(19:1:21:1)> .
<DeclRefExpr(60:6:60:6)> <hasName> "plus" .
<ImplicitCastExpr(60:11:60:16)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(60:11:60:16)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(60:11:60:16)> <hasSubExpr> <MemberExpr(60:11:60:16)> .
<MemberExpr(60:11:60:16)> <isa> "MemberExpr" .
<MemberExpr(60:11:60:16)> <hasBase> <DeclRefExpr(60:11:60:11)> .
<MemberExpr(60:11:60:16)> <hasMemberDecl> <Field(6:2:6:6)> .
<ImplicitCastExpr(60:11:60:11)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(60:11:60:11)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(60:11:60:11)> <hasSubExpr> <DeclRefExpr(60:11:60:11)> .
<DeclRefExpr(60:11:60:11)> <isa> "DeclRefExpr" .
<DeclRefExpr(60:11:60:11)> <hasDecl> <Var(32:2:32:9)> .
<DeclRefExpr(60:11:60:11)> <hasName> "stp" .
<CStyleCastExpr(60:19:60:34)> <isa> "CStyleCastExpr" .
<CStyleCastExpr(60:19:60:34)> <hasCastKind> "FloatingToIntegral" .
<CStyleCastExpr(60:19:60:34)> <hasSubExpr> <ImplicitCastExpr(60:24:60:34)> .
<ImplicitCastExpr(60:24:60:34)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(60:24:60:34)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(60:24:60:34)> <hasSubExpr> <ParenExpr(60:24:60:34)> .
<ParenExpr(60:24:60:34)> <isa> "ParenExpr" .
<UnaryOperator(60:25:60:33)> <isa> "UnaryOperator" .
<UnaryOperator(60:25:60:33)> <hasOperator> "*" .
<UnaryOperator(60:25:60:33)> <hasSubExpr> <MemberExpr(60:27:60:32)> .
<ImplicitCastExpr(60:26:60:33)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(60:26:60:33)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(60:26:60:33)> <hasSubExpr> <ParenExpr(60:26:60:33)> .
<ParenExpr(60:26:60:33)> <isa> "ParenExpr" .
<MemberExpr(60:27:60:32)> <isa> "MemberExpr" .
<MemberExpr(60:27:60:32)> <hasBase> <DeclRefExpr(60:27:60:27)> .
<MemberExpr(60:27:60:32)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(60:27:60:27)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(60:27:60:27)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(60:27:60:27)> <hasSubExpr> <DeclRefExpr(60:27:60:27)> .
<DeclRefExpr(60:27:60:27)> <isa> "DeclRefExpr" .
<DeclRefExpr(60:27:60:27)> <hasDecl> <Var(32:2:32:9)> .
<DeclRefExpr(60:27:60:27)> <hasName> "stp" .
<CompoundAssignOperator(61:2:61:7)> <isa> "CompoundAssignOperator" .
<CompoundAssignOperator(61:2:61:7)> <hasOperator> "+=" .
<CompoundAssignOperator(61:2:61:7)> <hasLHS> <DeclRefExpr(61:2:61:2)> .
<CompoundAssignOperator(61:2:61:7)> <hasRHS> <DeclRefExpr(61:7:61:7)> .
<CompoundAssignOperator(61:2:61:7)> <isa> "AssignmentOp" .
<DeclRefExpr(61:2:61:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(61:2:61:2)> <hasDecl> <Var(28:2:28:6)> .
<DeclRefExpr(61:2:61:2)> <hasName> "c" .
<ImplicitCastExpr(61:7:61:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(61:7:61:7)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(61:7:61:7)> <hasSubExpr> <DeclRefExpr(61:7:61:7)> .
<DeclRefExpr(61:7:61:7)> <isa> "DeclRefExpr" .
<DeclRefExpr(61:7:61:7)> <hasDecl> <Var(3:1:3:11)> .
<DeclRefExpr(61:7:61:7)> <hasName> "glb" .
<BinaryOperator(63:2:63:12)> <isa> "BinaryOperator" .
<BinaryOperator(63:2:63:12)> <hasOperator> "=" .
<BinaryOperator(63:2:63:12)> <hasLHS> <DeclRefExpr(63:2:63:2)> .
<BinaryOperator(63:2:63:12)> <hasRHS> <MemberExpr(63:7:63:12)> .
<BinaryOperator(63:2:63:12)> <isa> "AssignmentOp" .
<DeclRefExpr(63:2:63:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(63:2:63:2)> <hasDecl> <Var(29:2:29:18)> .
<DeclRefExpr(63:2:63:2)> <hasName> "fp" .
<ImplicitCastExpr(63:7:63:12)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(63:7:63:12)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(63:7:63:12)> <hasSubExpr> <MemberExpr(63:7:63:12)> .
<MemberExpr(63:7:63:12)> <isa> "MemberExpr" .
<MemberExpr(63:7:63:12)> <hasBase> <DeclRefExpr(63:7:63:7)> .
<MemberExpr(63:7:63:12)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(63:7:63:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(63:7:63:7)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(63:7:63:7)> <hasSubExpr> <DeclRefExpr(63:7:63:7)> .
<DeclRefExpr(63:7:63:7)> <isa> "DeclRefExpr" .
<DeclRefExpr(63:7:63:7)> <hasDecl> <Var(32:2:32:9)> .
<DeclRefExpr(63:7:63:7)> <hasName> "stp" .
<BinaryOperator(65:2:65:9)> <isa> "BinaryOperator" .
<BinaryOperator(65:2:65:9)> <hasOperator> "=" .
<BinaryOperator(65:2:65:9)> <hasLHS> <UnaryOperator(65:2:65:3)> .
<BinaryOperator(65:2:65:9)> <hasRHS> <DeclRefExpr(65:9:65:9)> .
<BinaryOperator(65:2:65:9)> <isa> "AssignmentOp" .
<UnaryOperator(65:2:65:3)> <isa> "UnaryOperator" .
<UnaryOperator(65:2:65:3)> <hasOperator> "*" .
<UnaryOperator(65:2:65:3)> <hasSubExpr> <DeclRefExpr(65:3:65:3)> .
<ImplicitCastExpr(65:3:65:3)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(65:3:65:3)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(65:3:65:3)> <hasSubExpr> <DeclRefExpr(65:3:65:3)> .
<DeclRefExpr(65:3:65:3)> <isa> "DeclRefExpr" .
<DeclRefExpr(65:3:65:3)> <hasDecl> <Var(31:2:31:10)> .
<DeclRefExpr(65:3:65:3)> <hasName> "fpp" .
<ImplicitCastExpr(65:9:65:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(65:9:65:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(65:9:65:9)> <hasSubExpr> <DeclRefExpr(65:9:65:9)> .
<DeclRefExpr(65:9:65:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(65:9:65:9)> <hasDecl> <Var(29:2:29:18)> .
<DeclRefExpr(65:9:65:9)> <hasName> "fp" .
<BinaryOperator(67:2:67:8)> <isa> "BinaryOperator" .
<BinaryOperator(67:2:67:8)> <hasOperator> "=" .
<BinaryOperator(67:2:67:8)> <hasLHS> <DeclRefExpr(67:2:67:2)> .
<BinaryOperator(67:2:67:8)> <hasRHS> <UnaryOperator(67:7:67:8)> .
<BinaryOperator(67:2:67:8)> <isa> "AssignmentOp" .
<DeclRefExpr(67:2:67:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(67:2:67:2)> <hasDecl> <Var(29:2:29:18)> .
<DeclRefExpr(67:2:67:2)> <hasName> "fp" .
<ImplicitCastExpr(67:7:67:8)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(67:7:67:8)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(67:7:67:8)> <hasSubExpr> <UnaryOperator(67:7:67:8)> .
<UnaryOperator(67:7:67:8)> <isa> "UnaryOperator" .
<UnaryOperator(67:7:67:8)> <hasOperator> "*" .
<UnaryOperator(67:7:67:8)> <hasSubExpr> <DeclRefExpr(67:8:67:8)> .
<ImplicitCastExpr(67:8:67:8)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(67:8:67:8)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(67:8:67:8)> <hasSubExpr> <DeclRefExpr(67:8:67:8)> .
<DeclRefExpr(67:8:67:8)> <isa> "DeclRefExpr" .
<DeclRefExpr(67:8:67:8)> <hasDecl> <Var(31:2:31:10)> .
<DeclRefExpr(67:8:67:8)> <hasName> "fpp" .
<CallExpr(69:2:69:43)> <isa> "CallExpr" .
<CallExpr(69:2:69:43)> <callsFunc> <Function(362:1:362:56)> .
<CallExpr(69:2:69:43)> <calls> "printf" .
<CallExpr(69:2:69:43)> <hasArg(0)> <ImplicitCastExpr(69:9:69:9)> .
<CallExpr(69:2:69:43)> <hasArg(1)> <ImplicitCastExpr(69:23:69:28)> .
<CallExpr(69:2:69:43)> <hasArg(2)> <ImplicitCastExpr(69:31:69:39)> .
<CallExpr(69:2:69:43)> <hasArg(3)> <ImplicitCastExpr(69:42:69:42)> .
<ImplicitCastExpr(69:2:69:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(69:2:69:2)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(69:2:69:2)> <hasSubExpr> <DeclRefExpr(69:2:69:2)> .
<DeclRefExpr(69:2:69:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(69:2:69:2)> <hasDecl> <Function(362:1:362:56)> .
<DeclRefExpr(69:2:69:2)> <hasName> "printf" .
<ImplicitCastExpr(69:9:69:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(69:9:69:9)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(69:9:69:9)> <hasSubExpr> <ImplicitCastExpr(69:9:69:9)> .
<ImplicitCastExpr(69:9:69:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(69:9:69:9)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(69:9:69:9)> <hasSubExpr> <StringLiteral(69:9:69:9)> .
<StringLiteral(69:9:69:9)> <isa> "StringLiteral" .
<ImplicitCastExpr(69:23:69:28)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(69:23:69:28)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(69:23:69:28)> <hasSubExpr> <MemberExpr(69:23:69:28)> .
<MemberExpr(69:23:69:28)> <isa> "MemberExpr" .
<MemberExpr(69:23:69:28)> <hasBase> <DeclRefExpr(69:23:69:23)> .
<MemberExpr(69:23:69:28)> <hasMemberDecl> <Field(6:2:6:6)> .
<ImplicitCastExpr(69:23:69:23)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(69:23:69:23)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(69:23:69:23)> <hasSubExpr> <DeclRefExpr(69:23:69:23)> .
<DeclRefExpr(69:23:69:23)> <isa> "DeclRefExpr" .
<DeclRefExpr(69:23:69:23)> <hasDecl> <Var(32:2:32:9)> .
<DeclRefExpr(69:23:69:23)> <hasName> "stp" .
<ImplicitCastExpr(69:31:69:39)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(69:31:69:39)> <hasCastKind> "FloatingCast" .
<ImplicitCastExpr(69:31:69:39)> <hasSubExpr> <ImplicitCastExpr(69:31:69:39)> .
<ImplicitCastExpr(69:31:69:39)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(69:31:69:39)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(69:31:69:39)> <hasSubExpr> <UnaryOperator(69:31:69:39)> .
<UnaryOperator(69:31:69:39)> <isa> "UnaryOperator" .
<UnaryOperator(69:31:69:39)> <hasOperator> "*" .
<UnaryOperator(69:31:69:39)> <hasSubExpr> <MemberExpr(69:33:69:38)> .
<ImplicitCastExpr(69:32:69:39)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(69:32:69:39)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(69:32:69:39)> <hasSubExpr> <ParenExpr(69:32:69:39)> .
<ParenExpr(69:32:69:39)> <isa> "ParenExpr" .
<MemberExpr(69:33:69:38)> <isa> "MemberExpr" .
<MemberExpr(69:33:69:38)> <hasBase> <DeclRefExpr(69:33:69:33)> .
<MemberExpr(69:33:69:38)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(69:33:69:33)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(69:33:69:33)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(69:33:69:33)> <hasSubExpr> <DeclRefExpr(69:33:69:33)> .
<DeclRefExpr(69:33:69:33)> <isa> "DeclRefExpr" .
<DeclRefExpr(69:33:69:33)> <hasDecl> <Var(32:2:32:9)> .
<DeclRefExpr(69:33:69:33)> <hasName> "stp" .
<ImplicitCastExpr(69:42:69:42)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(69:42:69:42)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(69:42:69:42)> <hasSubExpr> <DeclRefExpr(69:42:69:42)> .
<DeclRefExpr(69:42:69:42)> <isa> "DeclRefExpr" .
<DeclRefExpr(69:42:69:42)> <hasDecl> <Var(28:2:28:6)> .
<DeclRefExpr(69:42:69:42)> <hasName> "c" .
<CallExpr(70:2:70:22)> <isa> "CallExpr" .
<CallExpr(70:2:70:22)> <callsFunc> <Function(362:1:362:56)> .
<CallExpr(70:2:70:22)> <calls> "printf" .
<CallExpr(70:2:70:22)> <hasArg(0)> <ImplicitCastExpr(70:9:70:9)> .
<CallExpr(70:2:70:22)> <hasArg(1)> <ImplicitCastExpr(70:17:70:19)> .
<ImplicitCastExpr(70:2:70:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(70:2:70:2)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(70:2:70:2)> <hasSubExpr> <DeclRefExpr(70:2:70:2)> .
<DeclRefExpr(70:2:70:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(70:2:70:2)> <hasDecl> <Function(362:1:362:56)> .
<DeclRefExpr(70:2:70:2)> <hasName> "printf" .
<ImplicitCastExpr(70:9:70:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(70:9:70:9)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(70:9:70:9)> <hasSubExpr> <ImplicitCastExpr(70:9:70:9)> .
<ImplicitCastExpr(70:9:70:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(70:9:70:9)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(70:9:70:9)> <hasSubExpr> <StringLiteral(70:9:70:9)> .
<StringLiteral(70:9:70:9)> <isa> "StringLiteral" .
<ImplicitCastExpr(70:17:70:19)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(70:17:70:19)> <hasCastKind> "FloatingCast" .
<ImplicitCastExpr(70:17:70:19)> <hasSubExpr> <ImplicitCastExpr(70:17:70:19)> .
<ImplicitCastExpr(70:17:70:19)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(70:17:70:19)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(70:17:70:19)> <hasSubExpr> <UnaryOperator(70:17:70:19)> .
<UnaryOperator(70:17:70:19)> <isa> "UnaryOperator" .
<UnaryOperator(70:17:70:19)> <hasOperator> "*" .
<UnaryOperator(70:17:70:19)> <hasSubExpr> <UnaryOperator(70:18:70:19)> .
<ImplicitCastExpr(70:18:70:19)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(70:18:70:19)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(70:18:70:19)> <hasSubExpr> <UnaryOperator(70:18:70:19)> .
<UnaryOperator(70:18:70:19)> <isa> "UnaryOperator" .
<UnaryOperator(70:18:70:19)> <hasOperator> "*" .
<UnaryOperator(70:18:70:19)> <hasSubExpr> <DeclRefExpr(70:19:70:19)> .
<ImplicitCastExpr(70:19:70:19)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(70:19:70:19)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(70:19:70:19)> <hasSubExpr> <DeclRefExpr(70:19:70:19)> .
<DeclRefExpr(70:19:70:19)> <isa> "DeclRefExpr" .
<DeclRefExpr(70:19:70:19)> <hasDecl> <Var(31:2:31:10)> .
<DeclRefExpr(70:19:70:19)> <hasName> "fpp" .
<ForStmt(72:2:75:2)> <isa> "ForStmt" .
<DeclStmt(72:7:72:16)> <isa> "DeclStmt" .
<Var(72:7:72:15)> <isa> "Var" .
<Var(72:7:72:15)> <hasName> "i" .
<Var(72:7:72:15)> <hasTypeClass> "['Builtin']" .
<Var(72:7:72:15)> <hasType> "int" .
<Var(72:7:72:15)> <isa> "LocalVarDecl" .
<Var(72:7:72:15)> <hasCanonicalDecl> <Var(72:7:72:15)> .
<Var(72:7:72:15)> <hasDefinition> <Var(72:7:72:15)> .
<Var(72:7:72:15)> <hasInit> <IntegerLiteral(72:15:72:15)> .
<IntegerLiteral(72:15:72:15)> <isa> "IntegerLiteral" .
<BinaryOperator(72:18:72:22)> <isa> "BinaryOperator" .
<BinaryOperator(72:18:72:22)> <hasOperator> "<" .
<BinaryOperator(72:18:72:22)> <hasLHS> <DeclRefExpr(72:18:72:18)> .
<BinaryOperator(72:18:72:22)> <hasRHS> <IntegerLiteral(72:22:72:22)> .
<ImplicitCastExpr(72:18:72:18)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(72:18:72:18)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(72:18:72:18)> <hasSubExpr> <DeclRefExpr(72:18:72:18)> .
<DeclRefExpr(72:18:72:18)> <isa> "DeclRefExpr" .
<DeclRefExpr(72:18:72:18)> <hasDecl> <Var(72:7:72:15)> .
<DeclRefExpr(72:18:72:18)> <hasName> "i" .
<IntegerLiteral(72:22:72:22)> <isa> "IntegerLiteral" .
<UnaryOperator(72:25:72:27)> <isa> "UnaryOperator" .
<UnaryOperator(72:25:72:27)> <hasOperator> "++" .
<UnaryOperator(72:25:72:27)> <hasSubExpr> <DeclRefExpr(72:27:72:27)> .
<DeclRefExpr(72:27:72:27)> <isa> "DeclRefExpr" .
<DeclRefExpr(72:27:72:27)> <hasDecl> <Var(72:7:72:15)> .
<DeclRefExpr(72:27:72:27)> <hasName> "i" .
<CompoundStmt(73:2:75:2)> <isa> "CompoundStmt" .
<CallExpr(74:3:74:23)> <isa> "CallExpr" .
<CallExpr(74:3:74:23)> <callsFunc> <Function(362:1:362:56)> .
<CallExpr(74:3:74:23)> <calls> "printf" .
<CallExpr(74:3:74:23)> <hasArg(0)> <ImplicitCastExpr(74:10:74:10)> .
<CallExpr(74:3:74:23)> <hasArg(1)> <ImplicitCastExpr(74:18:74:22)> .
<ImplicitCastExpr(74:3:74:3)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(74:3:74:3)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(74:3:74:3)> <hasSubExpr> <DeclRefExpr(74:3:74:3)> .
<DeclRefExpr(74:3:74:3)> <isa> "DeclRefExpr" .
<DeclRefExpr(74:3:74:3)> <hasDecl> <Function(362:1:362:56)> .
<DeclRefExpr(74:3:74:3)> <hasName> "printf" .
<ImplicitCastExpr(74:10:74:10)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(74:10:74:10)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(74:10:74:10)> <hasSubExpr> <ImplicitCastExpr(74:10:74:10)> .
<ImplicitCastExpr(74:10:74:10)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(74:10:74:10)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(74:10:74:10)> <hasSubExpr> <StringLiteral(74:10:74:10)> .
<StringLiteral(74:10:74:10)> <isa> "StringLiteral" .
<ImplicitCastExpr(74:18:74:22)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(74:18:74:22)> <hasCastKind> "FloatingCast" .
<ImplicitCastExpr(74:18:74:22)> <hasSubExpr> <ImplicitCastExpr(74:18:74:22)> .
<ImplicitCastExpr(74:18:74:22)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(74:18:74:22)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(74:18:74:22)> <hasSubExpr> <ArraySubscriptExpr(74:18:74:22)> .
<ArraySubscriptExpr(74:18:74:22)> <isa> "ArraySubscriptExpr" .
<ArraySubscriptExpr(74:18:74:22)> <hasBase> <DeclRefExpr(74:18:74:18)> .
<ArraySubscriptExpr(74:18:74:22)> <hasIndex> <DeclRefExpr(74:21:74:21)> .
<ImplicitCastExpr(74:18:74:18)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(74:18:74:18)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(74:18:74:18)> <hasSubExpr> <DeclRefExpr(74:18:74:18)> .
<DeclRefExpr(74:18:74:18)> <isa> "DeclRefExpr" .
<DeclRefExpr(74:18:74:18)> <hasDecl> <Var(36:2:36:47)> .
<DeclRefExpr(74:18:74:18)> <hasName> "pl" .
<ImplicitCastExpr(74:21:74:21)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(74:21:74:21)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(74:21:74:21)> <hasSubExpr> <DeclRefExpr(74:21:74:21)> .
<DeclRefExpr(74:21:74:21)> <isa> "DeclRefExpr" .
<DeclRefExpr(74:21:74:21)> <hasDecl> <Var(72:7:72:15)> .
<DeclRefExpr(74:21:74:21)> <hasName> "i" .
<CallExpr(77:2:77:9)> <isa> "CallExpr" .
<CallExpr(77:2:77:9)> <callsFunc> <Function(483:1:55:54)> .
<CallExpr(77:2:77:9)> <calls> "free" .
<CallExpr(77:2:77:9)> <hasArg(0)> <ImplicitCastExpr(77:7:77:7)> .
<ImplicitCastExpr(77:2:77:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(77:2:77:2)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(77:2:77:2)> <hasSubExpr> <DeclRefExpr(77:2:77:2)> .
<DeclRefExpr(77:2:77:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(77:2:77:2)> <hasDecl> <Function(483:1:55:54)> .
<DeclRefExpr(77:2:77:2)> <hasName> "free" .
<ImplicitCastExpr(77:7:77:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(77:7:77:7)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(77:7:77:7)> <hasSubExpr> <ImplicitCastExpr(77:7:77:7)> .
<ImplicitCastExpr(77:7:77:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(77:7:77:7)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(77:7:77:7)> <hasSubExpr> <DeclRefExpr(77:7:77:7)> .
<DeclRefExpr(77:7:77:7)> <isa> "DeclRefExpr" .
<DeclRefExpr(77:7:77:7)> <hasDecl> <Var(36:2:36:47)> .
<DeclRefExpr(77:7:77:7)> <hasName> "pl" .
<CallExpr(78:2:78:10)> <isa> "CallExpr" .
<CallExpr(78:2:78:10)> <callsFunc> <Function(483:1:55:54)> .
<CallExpr(78:2:78:10)> <calls> "free" .
<CallExpr(78:2:78:10)> <hasArg(0)> <ImplicitCastExpr(78:7:78:7)> .
<ImplicitCastExpr(78:2:78:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(78:2:78:2)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(78:2:78:2)> <hasSubExpr> <DeclRefExpr(78:2:78:2)> .
<DeclRefExpr(78:2:78:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(78:2:78:2)> <hasDecl> <Function(483:1:55:54)> .
<DeclRefExpr(78:2:78:2)> <hasName> "free" .
<ImplicitCastExpr(78:7:78:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(78:7:78:7)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(78:7:78:7)> <hasSubExpr> <ImplicitCastExpr(78:7:78:7)> .
<ImplicitCastExpr(78:7:78:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(78:7:78:7)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(78:7:78:7)> <hasSubExpr> <DeclRefExpr(78:7:78:7)> .
<DeclRefExpr(78:7:78:7)> <isa> "DeclRefExpr" .
<DeclRefExpr(78:7:78:7)> <hasDecl> <Var(37:2:37:9)> .
<DeclRefExpr(78:7:78:7)> <hasName> "pl2" .
<ReturnStmt(80:2:80:9)> <isa> "ReturnStmt" .
<ReturnStmt(80:2:80:9)> <returns> <DeclRefExpr(80:9:80:9)> .
<ReturnStmt(80:2:80:9)> <inProc> <Function(27:1:82:1)> .
<ImplicitCastExpr(80:9:80:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(80:9:80:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(80:9:80:9)> <hasSubExpr> <DeclRefExpr(80:9:80:9)> .
<DeclRefExpr(80:9:80:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(80:9:80:9)> <hasDecl> <Var(28:2:28:6)> .
<DeclRefExpr(80:9:80:9)> <hasName> "c" .
