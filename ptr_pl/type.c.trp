<TranslationUnit()> <isa> "TranslationUnit" .
<Var(3:1:3:11)> <isa> "Var" .
<Var(3:1:3:11)> <hasName> "glb" .
<Var(3:1:3:11)> <hasTypeClass> "['Builtin']" .
<Var(3:1:3:11)> <hasType> "int" .
<Var(3:1:3:11)> <hasCanonicalDecl> <Var(3:1:3:11)> .
<Var(3:1:3:11)> <hasDefinition> <Var(3:1:3:11)> .
<Var(3:1:3:11)> <hasInit> <IntegerLiteral(3:11:3:11)> .
<IntegerLiteral(3:11:3:11)> <isa> "IntegerLiteral" .
<Record(5:1:9:1)> <isa> "Record" .
<Record(5:1:9:1)> <hasName> "ts" .
<Record(5:1:9:1)> <hasDefinition> <Record(5:1:9:1)> .
<Record(5:1:9:1)> <hasField> <Field(6:2:6:6)> .
<Record(5:1:9:1)> <hasField> <Field(7:2:7:9)> .
<Record(5:1:9:1)> <hasField> <Field(8:2:8:7)> .
<Field(6:2:6:6)> <isa> "Field" .
<Field(6:2:6:6)> <hasName> "a" .
<Field(6:2:6:6)> <hasTypeClass> "['Builtin']" .
<Field(6:2:6:6)> <hasType> "int" .
<Field(6:2:6:6)> <hasParent> <Record(5:1:9:1)> .
<Field(7:2:7:9)> <isa> "Field" .
<Field(7:2:7:9)> <hasName> "p" .
<Field(7:2:7:9)> <hasTypeClass> "['PointerType','Builtin']" .
<Field(7:2:7:9)> <hasType> "float *" .
<Field(7:2:7:9)> <hasParent> <Record(5:1:9:1)> .
<Field(8:2:8:7)> <isa> "Field" .
<Field(8:2:8:7)> <hasName> "c" .
<Field(8:2:8:7)> <hasTypeClass> "['Builtin']" .
<Field(8:2:8:7)> <hasType> "char" .
<Field(8:2:8:7)> <hasParent> <Record(5:1:9:1)> .
<Typedef(11:1:11:19)> <isa> "Typedef" .
<Typedef(11:1:11:19)> <hasName> "T" .
<Typedef(11:1:11:19)> <hasUnderlyingType> "struct ts" .
<Typedef(11:1:11:19)> <hasCanonicalType> "struct ts" .
<Typedef(11:1:11:19)> <hasCanonicalDecl> <Typedef(11:1:11:19)> .
<Function(13:1:13:14)> <isa> "Function" .
<Function(13:1:13:14)> <hasName> "foo" .
<Function(13:1:13:14)> <hasTypeClass> "['FunctionProto']" .
<Function(13:1:13:14)> <hasType> "int (int)" .
<Function(13:1:13:14)> <hasParm(0)> <ParmVar(13:9:13:13)> .
<ParmVar(13:9:13:13)> <isa> "ParmVar" .
<ParmVar(13:9:13:13)> <hasName> "a" .
<ParmVar(13:9:13:13)> <hasTypeClass> "['Builtin']" .
<ParmVar(13:9:13:13)> <hasType> "int" .
<ParmVar(13:9:13:13)> <hasCanonicalDecl> <ParmVar(13:9:13:13)> .
<ParmVar(13:9:13:13)> <hasDefinition> <ParmVar(13:9:13:13)> .
<Function(15:1:17:1)> <isa> "Function" .
<Function(15:1:17:1)> <hasName> "plus" .
<Function(15:1:17:1)> <hasTypeClass> "['FunctionProto']" .
<Function(15:1:17:1)> <hasType> "int (int, int)" .
<Function(15:1:17:1)> <hasBody> <CompoundStmt(15:24:17:1)> .
<Function(15:1:17:1)> <hasParm(0)> <ParmVar(15:10:15:14)> .
<Function(15:1:17:1)> <hasParm(1)> <ParmVar(15:17:15:21)> .
<ParmVar(15:10:15:14)> <isa> "ParmVar" .
<ParmVar(15:10:15:14)> <hasName> "a" .
<ParmVar(15:10:15:14)> <hasTypeClass> "['Builtin']" .
<ParmVar(15:10:15:14)> <hasType> "int" .
<ParmVar(15:10:15:14)> <hasCanonicalDecl> <ParmVar(15:10:15:14)> .
<ParmVar(15:10:15:14)> <hasDefinition> <ParmVar(15:10:15:14)> .
<ParmVar(15:17:15:21)> <isa> "ParmVar" .
<ParmVar(15:17:15:21)> <hasName> "b" .
<ParmVar(15:17:15:21)> <hasTypeClass> "['Builtin']" .
<ParmVar(15:17:15:21)> <hasType> "int" .
<ParmVar(15:17:15:21)> <hasCanonicalDecl> <ParmVar(15:17:15:21)> .
<ParmVar(15:17:15:21)> <hasDefinition> <ParmVar(15:17:15:21)> .
<CompoundStmt(15:24:17:1)> <isa> "CompoundStmt" .
<ReturnStmt(16:2:16:13)> <isa> "ReturnStmt" .
<BinaryOperator(16:9:16:13)> <isa> "BinaryOperator" .
<BinaryOperator(16:9:16:13)> <hasOperator> "+" .
<BinaryOperator(16:9:16:13)> <hasLHS> <ImplicitCastExpr(16:9:16:9)> .
<BinaryOperator(16:9:16:13)> <hasRHS> <ImplicitCastExpr(16:13:16:13)> .
<ImplicitCastExpr(16:9:16:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(16:9:16:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(16:9:16:9)> <hasSubExpr> <DeclRefExpr(16:9:16:9)> .
<DeclRefExpr(16:9:16:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(16:9:16:9)> <hasDecl> <ParmVar(15:10:15:14)> .
<ImplicitCastExpr(16:13:16:13)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(16:13:16:13)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(16:13:16:13)> <hasSubExpr> <DeclRefExpr(16:13:16:13)> .
<DeclRefExpr(16:13:16:13)> <isa> "DeclRefExpr" .
<DeclRefExpr(16:13:16:13)> <hasDecl> <ParmVar(15:17:15:21)> .
<Function(19:1:63:1)> <isa> "Function" .
<Function(19:1:63:1)> <hasName> "main" .
<Function(19:1:63:1)> <hasTypeClass> "['FunctionNoProto']" .
<Function(19:1:63:1)> <hasType> "int ()" .
<Function(19:1:63:1)> <isa> "MainFunction" .
<Function(19:1:63:1)> <hasBody> <CompoundStmt(19:12:63:1)> .
<CompoundStmt(19:12:63:1)> <isa> "CompoundStmt" .
<DeclStmt(20:2:20:7)> <isa> "DeclStmt" .
<Var(20:2:20:6)> <isa> "Var" .
<Var(20:2:20:6)> <hasName> "c" .
<Var(20:2:20:6)> <hasTypeClass> "['Builtin']" .
<Var(20:2:20:6)> <hasType> "int" .
<Var(20:2:20:6)> <isa> "LocalVarDecl" .
<Var(20:2:20:6)> <hasCanonicalDecl> <Var(20:2:20:6)> .
<Var(20:2:20:6)> <hasDefinition> <Var(20:2:20:6)> .
<DeclStmt(21:2:21:15)> <isa> "DeclStmt" .
<Var(21:2:21:12)> <isa> "Var" .
<Var(21:2:21:12)> <hasName> "f" .
<Var(21:2:21:12)> <hasTypeClass> "['Builtin']" .
<Var(21:2:21:12)> <hasType> "float" .
<Var(21:2:21:12)> <isa> "LocalVarDecl" .
<Var(21:2:21:12)> <hasCanonicalDecl> <Var(21:2:21:12)> .
<Var(21:2:21:12)> <hasDefinition> <Var(21:2:21:12)> .
<Var(21:2:21:12)> <hasInit> <ImplicitCastExpr(21:12:21:12)> .
<ImplicitCastExpr(21:12:21:12)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(21:12:21:12)> <hasCastKind> "FloatingCast" .
<ImplicitCastExpr(21:12:21:12)> <hasSubExpr> <FloatingLiteral(21:12:21:12)> .
<FloatingLiteral(21:12:21:12)> <isa> "FloatingLiteral" .
<DeclStmt(22:2:22:9)> <isa> "DeclStmt" .
<Var(22:2:22:7)> <isa> "Var" .
<Var(22:2:22:7)> <hasName> "cp" .
<Var(22:2:22:7)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(22:2:22:7)> <hasType> "int *" .
<Var(22:2:22:7)> <isa> "LocalVarDecl" .
<Var(22:2:22:7)> <hasCanonicalDecl> <Var(22:2:22:7)> .
<Var(22:2:22:7)> <hasDefinition> <Var(22:2:22:7)> .
<DeclStmt(23:2:23:13)> <isa> "DeclStmt" .
<Var(23:2:23:10)> <isa> "Var" .
<Var(23:2:23:10)> <hasName> "fpp" .
<Var(23:2:23:10)> <hasTypeClass> "['PointerType','PointerType','Builtin']" .
<Var(23:2:23:10)> <hasType> "float **" .
<Var(23:2:23:10)> <isa> "LocalVarDecl" .
<Var(23:2:23:10)> <hasCanonicalDecl> <Var(23:2:23:10)> .
<Var(23:2:23:10)> <hasDefinition> <Var(23:2:23:10)> .
<DeclStmt(24:2:24:12)> <isa> "DeclStmt" .
<Var(24:2:24:4)> <isa> "Var" .
<Var(24:2:24:4)> <hasName> "st" .
<Var(24:2:24:4)> <hasTypeClass> "['Typedef']" .
<Var(24:2:24:4)> <hasType> "T" .
<Var(24:2:24:4)> <isa> "LocalVarDecl" .
<Var(24:2:24:4)> <hasCanonicalDecl> <Var(24:2:24:4)> .
<Var(24:2:24:4)> <hasDefinition> <Var(24:2:24:4)> .
<Var(24:2:24:9)> <isa> "Var" .
<Var(24:2:24:9)> <hasName> "stp" .
<Var(24:2:24:9)> <hasTypeClass> "['PointerType','Typedef']" .
<Var(24:2:24:9)> <hasType> "T *" .
<Var(24:2:24:9)> <isa> "LocalVarDecl" .
<Var(24:2:24:9)> <hasCanonicalDecl> <Var(24:2:24:9)> .
<Var(24:2:24:9)> <hasDefinition> <Var(24:2:24:9)> .
<DeclStmt(26:2:26:31)> <isa> "DeclStmt" .
<Var(26:2:26:30)> <isa> "Var" .
<Var(26:2:26:30)> <hasName> "parr" .
<Var(26:2:26:30)> <hasTypeClass> "['ConstantArray']" .
<Var(26:2:26:30)> <hasElementTypeClass> "['PointerType','Builtin']" .
<Var(26:2:26:30)> <hasType> "float *[3]" .
<Var(26:2:26:30)> <isa> "LocalVarDecl" .
<Var(26:2:26:30)> <hasCanonicalDecl> <Var(26:2:26:30)> .
<Var(26:2:26:30)> <hasDefinition> <Var(26:2:26:30)> .
<Var(26:2:26:30)> <hasInit> <InitListExpr(26:19:26:30)> .
<IntegerLiteral(26:14:26:14)> <isa> "IntegerLiteral" .
<InitListExpr(26:19:26:30)> <isa> "InitListExpr" .
<InitListExpr(26:19:26:30)> <hasSubInit(0)> "ImplicitValueInitExpr()" .
<InitListExpr(26:19:26:30)> <hasSubInit(1)> <UnaryOperator(26:27:26:28)> .
<DesignatedInitExpr(26:21:26:28)> <isa> "DesignatedInitExpr" .
<UnaryOperator(26:27:26:28)> <isa> "UnaryOperator" .
<UnaryOperator(26:27:26:28)> <hasOperator> "&" .
<UnaryOperator(26:27:26:28)> <hasSubExpr> <DeclRefExpr(26:28:26:28)> .
<DeclRefExpr(26:28:26:28)> <isa> "DeclRefExpr" .
<DeclRefExpr(26:28:26:28)> <hasDecl> <Var(21:2:21:12)> .
<IntegerLiteral(26:22:26:22)> <isa> "IntegerLiteral" .
<InitListExpr(26:19:26:30)> <isa> "InitListExpr" .
<InitListExpr(26:19:26:30)> <hasSubInit(0)> "ImplicitValueInitExpr()" .
<InitListExpr(26:19:26:30)> <hasSubInit(1)> <UnaryOperator(26:27:26:28)> .
<ImplicitValueInitExpr()> <isa> "ImplicitValueInitExpr" .
<UnaryOperator(26:27:26:28)> <isa> "UnaryOperator" .
<UnaryOperator(26:27:26:28)> <hasOperator> "&" .
<UnaryOperator(26:27:26:28)> <hasSubExpr> <DeclRefExpr(26:28:26:28)> .
<DeclRefExpr(26:28:26:28)> <isa> "DeclRefExpr" .
<DeclRefExpr(26:28:26:28)> <hasDecl> <Var(21:2:21:12)> .
<DeclStmt(28:2:28:48)> <isa> "DeclStmt" .
<Var(28:2:28:47)> <isa> "Var" .
<Var(28:2:28:47)> <hasName> "pl" .
<Var(28:2:28:47)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(28:2:28:47)> <hasType> "float *" .
<Var(28:2:28:47)> <isa> "LocalVarDecl" .
<Var(28:2:28:47)> <hasCanonicalDecl> <Var(28:2:28:47)> .
<Var(28:2:28:47)> <hasDefinition> <Var(28:2:28:47)> .
<Var(28:2:28:47)> <hasInit> <CStyleCastExpr(28:14:28:47)> .
<CStyleCastExpr(28:14:28:47)> <isa> "CStyleCastExpr" .
<CStyleCastExpr(28:14:28:47)> <hasCastKind> "BitCast" .
<CStyleCastExpr(28:14:28:47)> <hasSubExpr> <CallExpr(28:23:28:47)> .
<CallExpr(28:23:28:47)> <isa> "CallExpr" .
<CallExpr(28:23:28:47)> <callsFunc> <Function(466:1:211:58)> .
<CallExpr(28:23:28:47)> <calls> "malloc()" .
<CallExpr(28:23:28:47)> <hasArg(0)> <BinaryOperator(28:30:28:46)> .
<ImplicitCastExpr(28:23:28:23)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(28:23:28:23)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(28:23:28:23)> <hasSubExpr> <DeclRefExpr(28:23:28:23)> .
<DeclRefExpr(28:23:28:23)> <isa> "DeclRefExpr" .
<DeclRefExpr(28:23:28:23)> <hasDecl> <Function(466:1:211:58)> .
<BinaryOperator(28:30:28:46)> <isa> "BinaryOperator" .
<BinaryOperator(28:30:28:46)> <hasOperator> "*" .
<BinaryOperator(28:30:28:46)> <hasLHS> <ImplicitCastExpr(28:30:28:30)> .
<BinaryOperator(28:30:28:46)> <hasRHS> <UnaryExprOrTypeTraitExpr(28:34:28:46)> .
<ImplicitCastExpr(28:30:28:30)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(28:30:28:30)> <hasCastKind> "IntegralCast" .
<ImplicitCastExpr(28:30:28:30)> <hasSubExpr> <IntegerLiteral(28:30:28:30)> .
<IntegerLiteral(28:30:28:30)> <isa> "IntegerLiteral" .
<UnaryExprOrTypeTraitExpr(28:34:28:46)> <isa> "UnaryExprOrTypeTraitExpr" .
<ForStmt(30:2:33:2)> <isa> "ForStmt" .
<DeclStmt(30:7:30:16)> <isa> "DeclStmt" .
<Var(30:7:30:15)> <isa> "Var" .
<Var(30:7:30:15)> <hasName> "i" .
<Var(30:7:30:15)> <hasTypeClass> "['Builtin']" .
<Var(30:7:30:15)> <hasType> "int" .
<Var(30:7:30:15)> <isa> "LocalVarDecl" .
<Var(30:7:30:15)> <hasCanonicalDecl> <Var(30:7:30:15)> .
<Var(30:7:30:15)> <hasDefinition> <Var(30:7:30:15)> .
<Var(30:7:30:15)> <hasInit> <IntegerLiteral(30:15:30:15)> .
<IntegerLiteral(30:15:30:15)> <isa> "IntegerLiteral" .
<BinaryOperator(30:18:30:22)> <isa> "BinaryOperator" .
<BinaryOperator(30:18:30:22)> <hasOperator> "<" .
<BinaryOperator(30:18:30:22)> <hasLHS> <ImplicitCastExpr(30:18:30:18)> .
<BinaryOperator(30:18:30:22)> <hasRHS> <IntegerLiteral(30:22:30:22)> .
<ImplicitCastExpr(30:18:30:18)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(30:18:30:18)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(30:18:30:18)> <hasSubExpr> <DeclRefExpr(30:18:30:18)> .
<DeclRefExpr(30:18:30:18)> <isa> "DeclRefExpr" .
<DeclRefExpr(30:18:30:18)> <hasDecl> <Var(30:7:30:15)> .
<IntegerLiteral(30:22:30:22)> <isa> "IntegerLiteral" .
<UnaryOperator(30:25:30:27)> <isa> "UnaryOperator" .
<UnaryOperator(30:25:30:27)> <hasOperator> "++" .
<UnaryOperator(30:25:30:27)> <hasSubExpr> <DeclRefExpr(30:27:30:27)> .
<DeclRefExpr(30:27:30:27)> <isa> "DeclRefExpr" .
<DeclRefExpr(30:27:30:27)> <hasDecl> <Var(30:7:30:15)> .
<CompoundStmt(31:2:33:2)> <isa> "CompoundStmt" .
<BinaryOperator(32:3:32:11)> <isa> "BinaryOperator" .
<BinaryOperator(32:3:32:11)> <hasOperator> "=" .
<BinaryOperator(32:3:32:11)> <hasLHS> <ArraySubscriptExpr(32:3:32:7)> .
<BinaryOperator(32:3:32:11)> <hasRHS> <ImplicitCastExpr(32:11:32:11)> .
<BinaryOperator(32:3:32:11)> <isa> "AssignmentOp" .
<ArraySubscriptExpr(32:3:32:7)> <isa> "ArraySubscriptExpr" .
<ArraySubscriptExpr(32:3:32:7)> <hasBase> <ImplicitCastExpr(32:3:32:3)> .
<ArraySubscriptExpr(32:3:32:7)> <hasIndex> <ImplicitCastExpr(32:6:32:6)> .
<ImplicitCastExpr(32:3:32:3)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(32:3:32:3)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(32:3:32:3)> <hasSubExpr> <DeclRefExpr(32:3:32:3)> .
<DeclRefExpr(32:3:32:3)> <isa> "DeclRefExpr" .
<DeclRefExpr(32:3:32:3)> <hasDecl> <Var(28:2:28:47)> .
<ImplicitCastExpr(32:6:32:6)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(32:6:32:6)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(32:6:32:6)> <hasSubExpr> <DeclRefExpr(32:6:32:6)> .
<DeclRefExpr(32:6:32:6)> <isa> "DeclRefExpr" .
<DeclRefExpr(32:6:32:6)> <hasDecl> <Var(30:7:30:15)> .
<ImplicitCastExpr(32:11:32:11)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(32:11:32:11)> <hasCastKind> "IntegralToFloating" .
<ImplicitCastExpr(32:11:32:11)> <hasSubExpr> <ImplicitCastExpr(32:11:32:11)> .
<ImplicitCastExpr(32:11:32:11)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(32:11:32:11)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(32:11:32:11)> <hasSubExpr> <DeclRefExpr(32:11:32:11)> .
<DeclRefExpr(32:11:32:11)> <isa> "DeclRefExpr" .
<DeclRefExpr(32:11:32:11)> <hasDecl> <Var(30:7:30:15)> .
<BinaryOperator(35:2:35:6)> <isa> "BinaryOperator" .
<BinaryOperator(35:2:35:6)> <hasOperator> "=" .
<BinaryOperator(35:2:35:6)> <hasLHS> <DeclRefExpr(35:2:35:2)> .
<BinaryOperator(35:2:35:6)> <hasRHS> <IntegerLiteral(35:6:35:6)> .
<BinaryOperator(35:2:35:6)> <isa> "AssignmentOp" .
<DeclRefExpr(35:2:35:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(35:2:35:2)> <hasDecl> <Var(20:2:20:6)> .
<IntegerLiteral(35:6:35:6)> <isa> "IntegerLiteral" .
<BinaryOperator(36:2:36:9)> <isa> "BinaryOperator" .
<BinaryOperator(36:2:36:9)> <hasOperator> "=" .
<BinaryOperator(36:2:36:9)> <hasLHS> <MemberExpr(36:2:36:5)> .
<BinaryOperator(36:2:36:9)> <hasRHS> <ImplicitCastExpr(36:9:36:9)> .
<BinaryOperator(36:2:36:9)> <isa> "AssignmentOp" .
<MemberExpr(36:2:36:5)> <isa> "MemberExpr" .
<MemberExpr(36:2:36:5)> <hasBase> <DeclRefExpr(36:2:36:2)> .
<MemberExpr(36:2:36:5)> <hasMemberDecl> <Field(6:2:6:6)> .
<DeclRefExpr(36:2:36:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(36:2:36:2)> <hasDecl> <Var(24:2:24:4)> .
<ImplicitCastExpr(36:9:36:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(36:9:36:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(36:9:36:9)> <hasSubExpr> <DeclRefExpr(36:9:36:9)> .
<DeclRefExpr(36:9:36:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(36:9:36:9)> <hasDecl> <Var(20:2:20:6)> .
<BinaryOperator(38:2:38:8)> <isa> "BinaryOperator" .
<BinaryOperator(38:2:38:8)> <hasOperator> "=" .
<BinaryOperator(38:2:38:8)> <hasLHS> <DeclRefExpr(38:2:38:2)> .
<BinaryOperator(38:2:38:8)> <hasRHS> <UnaryOperator(38:7:38:8)> .
<BinaryOperator(38:2:38:8)> <isa> "AssignmentOp" .
<DeclRefExpr(38:2:38:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(38:2:38:2)> <hasDecl> <Var(22:2:22:7)> .
<UnaryOperator(38:7:38:8)> <isa> "UnaryOperator" .
<UnaryOperator(38:7:38:8)> <hasOperator> "&" .
<UnaryOperator(38:7:38:8)> <hasSubExpr> <DeclRefExpr(38:8:38:8)> .
<DeclRefExpr(38:8:38:8)> <isa> "DeclRefExpr" .
<DeclRefExpr(38:8:38:8)> <hasDecl> <Var(20:2:20:6)> .
<CompoundAssignOperator(39:2:39:9)> <isa> "CompoundAssignOperator" .
<CompoundAssignOperator(39:2:39:9)> <hasOperator> "+=" .
<CompoundAssignOperator(39:2:39:9)> <hasLHS> <UnaryOperator(39:2:39:3)> .
<CompoundAssignOperator(39:2:39:9)> <hasRHS> <IntegerLiteral(39:9:39:9)> .
<CompoundAssignOperator(39:2:39:9)> <isa> "AssignmentOp" .
<UnaryOperator(39:2:39:3)> <isa> "UnaryOperator" .
<UnaryOperator(39:2:39:3)> <hasOperator> "*" .
<UnaryOperator(39:2:39:3)> <hasSubExpr> <ImplicitCastExpr(39:3:39:3)> .
<ImplicitCastExpr(39:3:39:3)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(39:3:39:3)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(39:3:39:3)> <hasSubExpr> <DeclRefExpr(39:3:39:3)> .
<DeclRefExpr(39:3:39:3)> <isa> "DeclRefExpr" .
<DeclRefExpr(39:3:39:3)> <hasDecl> <Var(22:2:22:7)> .
<IntegerLiteral(39:9:39:9)> <isa> "IntegerLiteral" .
<BinaryOperator(41:2:41:9)> <isa> "BinaryOperator" .
<BinaryOperator(41:2:41:9)> <hasOperator> "=" .
<BinaryOperator(41:2:41:9)> <hasLHS> <DeclRefExpr(41:2:41:2)> .
<BinaryOperator(41:2:41:9)> <hasRHS> <UnaryOperator(41:8:41:9)> .
<BinaryOperator(41:2:41:9)> <isa> "AssignmentOp" .
<DeclRefExpr(41:2:41:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(41:2:41:2)> <hasDecl> <Var(24:2:24:9)> .
<UnaryOperator(41:8:41:9)> <isa> "UnaryOperator" .
<UnaryOperator(41:8:41:9)> <hasOperator> "&" .
<UnaryOperator(41:8:41:9)> <hasSubExpr> <DeclRefExpr(41:9:41:9)> .
<DeclRefExpr(41:9:41:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(41:9:41:9)> <hasDecl> <Var(24:2:24:4)> .
<BinaryOperator(43:2:43:12)> <isa> "BinaryOperator" .
<BinaryOperator(43:2:43:12)> <hasOperator> "=" .
<BinaryOperator(43:2:43:12)> <hasLHS> <MemberExpr(43:2:43:7)> .
<BinaryOperator(43:2:43:12)> <hasRHS> <UnaryOperator(43:11:43:12)> .
<BinaryOperator(43:2:43:12)> <isa> "AssignmentOp" .
<MemberExpr(43:2:43:7)> <isa> "MemberExpr" .
<MemberExpr(43:2:43:7)> <hasBase> <ImplicitCastExpr(43:2:43:2)> .
<MemberExpr(43:2:43:7)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(43:2:43:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(43:2:43:2)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(43:2:43:2)> <hasSubExpr> <DeclRefExpr(43:2:43:2)> .
<DeclRefExpr(43:2:43:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(43:2:43:2)> <hasDecl> <Var(24:2:24:9)> .
<UnaryOperator(43:11:43:12)> <isa> "UnaryOperator" .
<UnaryOperator(43:11:43:12)> <hasOperator> "&" .
<UnaryOperator(43:11:43:12)> <hasSubExpr> <DeclRefExpr(43:12:43:12)> .
<DeclRefExpr(43:12:43:12)> <isa> "DeclRefExpr" .
<DeclRefExpr(43:12:43:12)> <hasDecl> <Var(21:2:21:12)> .
<BinaryOperator(44:2:44:16)> <isa> "BinaryOperator" .
<BinaryOperator(44:2:44:16)> <hasOperator> "=" .
<BinaryOperator(44:2:44:16)> <hasLHS> <DeclRefExpr(44:2:44:2)> .
<BinaryOperator(44:2:44:16)> <hasRHS> <UnaryOperator(44:8:44:16)> .
<BinaryOperator(44:2:44:16)> <isa> "AssignmentOp" .
<DeclRefExpr(44:2:44:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(44:2:44:2)> <hasDecl> <Var(23:2:23:10)> .
<UnaryOperator(44:8:44:16)> <isa> "UnaryOperator" .
<UnaryOperator(44:8:44:16)> <hasOperator> "&" .
<UnaryOperator(44:8:44:16)> <hasSubExpr> <ParenExpr(44:9:44:16)> .
<ParenExpr(44:9:44:16)> <isa> "ParenExpr" .
<ParenExpr(44:9:44:16)> <hasSubExpr> <MemberExpr(44:10:44:15)> .
<MemberExpr(44:10:44:15)> <isa> "MemberExpr" .
<MemberExpr(44:10:44:15)> <hasBase> <ImplicitCastExpr(44:10:44:10)> .
<MemberExpr(44:10:44:15)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(44:10:44:10)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(44:10:44:10)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(44:10:44:10)> <hasSubExpr> <DeclRefExpr(44:10:44:10)> .
<DeclRefExpr(44:10:44:10)> <isa> "DeclRefExpr" .
<DeclRefExpr(44:10:44:10)> <hasDecl> <Var(24:2:24:9)> .
<CompoundAssignOperator(46:2:46:14)> <isa> "CompoundAssignOperator" .
<CompoundAssignOperator(46:2:46:14)> <hasOperator> "+=" .
<CompoundAssignOperator(46:2:46:14)> <hasLHS> <DeclRefExpr(46:2:46:2)> .
<CompoundAssignOperator(46:2:46:14)> <hasRHS> <ImplicitCastExpr(46:7:46:14)> .
<CompoundAssignOperator(46:2:46:14)> <isa> "AssignmentOp" .
<DeclRefExpr(46:2:46:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(46:2:46:2)> <hasDecl> <Var(21:2:21:12)> .
<ImplicitCastExpr(46:7:46:14)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(46:7:46:14)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(46:7:46:14)> <hasSubExpr> <UnaryOperator(46:7:46:14)> .
<UnaryOperator(46:7:46:14)> <isa> "UnaryOperator" .
<UnaryOperator(46:7:46:14)> <hasOperator> "*" .
<UnaryOperator(46:7:46:14)> <hasSubExpr> <ImplicitCastExpr(46:8:46:14)> .
<ImplicitCastExpr(46:8:46:14)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(46:8:46:14)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(46:8:46:14)> <hasSubExpr> <ArraySubscriptExpr(46:8:46:14)> .
<ArraySubscriptExpr(46:8:46:14)> <isa> "ArraySubscriptExpr" .
<ArraySubscriptExpr(46:8:46:14)> <hasBase> <ImplicitCastExpr(46:8:46:8)> .
<ArraySubscriptExpr(46:8:46:14)> <hasIndex> <IntegerLiteral(46:13:46:13)> .
<ImplicitCastExpr(46:8:46:8)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(46:8:46:8)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(46:8:46:8)> <hasSubExpr> <DeclRefExpr(46:8:46:8)> .
<DeclRefExpr(46:8:46:8)> <isa> "DeclRefExpr" .
<DeclRefExpr(46:8:46:8)> <hasDecl> <Var(26:2:26:30)> .
<IntegerLiteral(46:13:46:13)> <isa> "IntegerLiteral" .
<BinaryOperator(48:2:48:35)> <isa> "BinaryOperator" .
<BinaryOperator(48:2:48:35)> <hasOperator> "=" .
<BinaryOperator(48:2:48:35)> <hasLHS> <DeclRefExpr(48:2:48:2)> .
<BinaryOperator(48:2:48:35)> <hasRHS> <CallExpr(48:6:48:35)> .
<BinaryOperator(48:2:48:35)> <isa> "AssignmentOp" .
<DeclRefExpr(48:2:48:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(48:2:48:2)> <hasDecl> <Var(20:2:20:6)> .
<CallExpr(48:6:48:35)> <isa> "CallExpr" .
<CallExpr(48:6:48:35)> <callsFunc> <Function(15:1:17:1)> .
<CallExpr(48:6:48:35)> <hasArg(0)> <ImplicitCastExpr(48:11:48:16)> .
<CallExpr(48:6:48:35)> <hasArg(1)> <CStyleCastExpr(48:19:48:34)> .
<ImplicitCastExpr(48:6:48:6)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(48:6:48:6)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(48:6:48:6)> <hasSubExpr> <DeclRefExpr(48:6:48:6)> .
<DeclRefExpr(48:6:48:6)> <isa> "DeclRefExpr" .
<DeclRefExpr(48:6:48:6)> <hasDecl> <Function(15:1:17:1)> .
<ImplicitCastExpr(48:11:48:16)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(48:11:48:16)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(48:11:48:16)> <hasSubExpr> <MemberExpr(48:11:48:16)> .
<MemberExpr(48:11:48:16)> <isa> "MemberExpr" .
<MemberExpr(48:11:48:16)> <hasBase> <ImplicitCastExpr(48:11:48:11)> .
<MemberExpr(48:11:48:16)> <hasMemberDecl> <Field(6:2:6:6)> .
<ImplicitCastExpr(48:11:48:11)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(48:11:48:11)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(48:11:48:11)> <hasSubExpr> <DeclRefExpr(48:11:48:11)> .
<DeclRefExpr(48:11:48:11)> <isa> "DeclRefExpr" .
<DeclRefExpr(48:11:48:11)> <hasDecl> <Var(24:2:24:9)> .
<CStyleCastExpr(48:19:48:34)> <isa> "CStyleCastExpr" .
<CStyleCastExpr(48:19:48:34)> <hasCastKind> "FloatingToIntegral" .
<CStyleCastExpr(48:19:48:34)> <hasSubExpr> <ImplicitCastExpr(48:24:48:34)> .
<ImplicitCastExpr(48:24:48:34)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(48:24:48:34)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(48:24:48:34)> <hasSubExpr> <ParenExpr(48:24:48:34)> .
<ParenExpr(48:24:48:34)> <isa> "ParenExpr" .
<ParenExpr(48:24:48:34)> <hasSubExpr> <UnaryOperator(48:25:48:33)> .
<UnaryOperator(48:25:48:33)> <isa> "UnaryOperator" .
<UnaryOperator(48:25:48:33)> <hasOperator> "*" .
<UnaryOperator(48:25:48:33)> <hasSubExpr> <ImplicitCastExpr(48:26:48:33)> .
<ImplicitCastExpr(48:26:48:33)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(48:26:48:33)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(48:26:48:33)> <hasSubExpr> <ParenExpr(48:26:48:33)> .
<ParenExpr(48:26:48:33)> <isa> "ParenExpr" .
<ParenExpr(48:26:48:33)> <hasSubExpr> <MemberExpr(48:27:48:32)> .
<MemberExpr(48:27:48:32)> <isa> "MemberExpr" .
<MemberExpr(48:27:48:32)> <hasBase> <ImplicitCastExpr(48:27:48:27)> .
<MemberExpr(48:27:48:32)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(48:27:48:27)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(48:27:48:27)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(48:27:48:27)> <hasSubExpr> <DeclRefExpr(48:27:48:27)> .
<DeclRefExpr(48:27:48:27)> <isa> "DeclRefExpr" .
<DeclRefExpr(48:27:48:27)> <hasDecl> <Var(24:2:24:9)> .
<CompoundAssignOperator(49:2:49:7)> <isa> "CompoundAssignOperator" .
<CompoundAssignOperator(49:2:49:7)> <hasOperator> "+=" .
<CompoundAssignOperator(49:2:49:7)> <hasLHS> <DeclRefExpr(49:2:49:2)> .
<CompoundAssignOperator(49:2:49:7)> <hasRHS> <ImplicitCastExpr(49:7:49:7)> .
<CompoundAssignOperator(49:2:49:7)> <isa> "AssignmentOp" .
<DeclRefExpr(49:2:49:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(49:2:49:2)> <hasDecl> <Var(20:2:20:6)> .
<ImplicitCastExpr(49:7:49:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(49:7:49:7)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(49:7:49:7)> <hasSubExpr> <DeclRefExpr(49:7:49:7)> .
<DeclRefExpr(49:7:49:7)> <isa> "DeclRefExpr" .
<DeclRefExpr(49:7:49:7)> <hasDecl> <Var(3:1:3:11)> .
<CallExpr(51:2:51:43)> <isa> "CallExpr" .
<CallExpr(51:2:51:43)> <callsFunc> <Function(362:1:362:56)> .
<CallExpr(51:2:51:43)> <hasArg(0)> <ImplicitCastExpr(51:9:51:9)> .
<CallExpr(51:2:51:43)> <hasArg(1)> <ImplicitCastExpr(51:23:51:28)> .
<CallExpr(51:2:51:43)> <hasArg(2)> <ImplicitCastExpr(51:31:51:39)> .
<CallExpr(51:2:51:43)> <hasArg(3)> <ImplicitCastExpr(51:42:51:42)> .
<ImplicitCastExpr(51:2:51:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(51:2:51:2)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(51:2:51:2)> <hasSubExpr> <DeclRefExpr(51:2:51:2)> .
<DeclRefExpr(51:2:51:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(51:2:51:2)> <hasDecl> <Function(362:1:362:56)> .
<ImplicitCastExpr(51:9:51:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(51:9:51:9)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(51:9:51:9)> <hasSubExpr> <ImplicitCastExpr(51:9:51:9)> .
<ImplicitCastExpr(51:9:51:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(51:9:51:9)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(51:9:51:9)> <hasSubExpr> <StringLiteral(51:9:51:9)> .
<StringLiteral(51:9:51:9)> <isa> "StringLiteral" .
<ImplicitCastExpr(51:23:51:28)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(51:23:51:28)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(51:23:51:28)> <hasSubExpr> <MemberExpr(51:23:51:28)> .
<MemberExpr(51:23:51:28)> <isa> "MemberExpr" .
<MemberExpr(51:23:51:28)> <hasBase> <ImplicitCastExpr(51:23:51:23)> .
<MemberExpr(51:23:51:28)> <hasMemberDecl> <Field(6:2:6:6)> .
<ImplicitCastExpr(51:23:51:23)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(51:23:51:23)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(51:23:51:23)> <hasSubExpr> <DeclRefExpr(51:23:51:23)> .
<DeclRefExpr(51:23:51:23)> <isa> "DeclRefExpr" .
<DeclRefExpr(51:23:51:23)> <hasDecl> <Var(24:2:24:9)> .
<ImplicitCastExpr(51:31:51:39)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(51:31:51:39)> <hasCastKind> "FloatingCast" .
<ImplicitCastExpr(51:31:51:39)> <hasSubExpr> <ImplicitCastExpr(51:31:51:39)> .
<ImplicitCastExpr(51:31:51:39)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(51:31:51:39)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(51:31:51:39)> <hasSubExpr> <UnaryOperator(51:31:51:39)> .
<UnaryOperator(51:31:51:39)> <isa> "UnaryOperator" .
<UnaryOperator(51:31:51:39)> <hasOperator> "*" .
<UnaryOperator(51:31:51:39)> <hasSubExpr> <ImplicitCastExpr(51:32:51:39)> .
<ImplicitCastExpr(51:32:51:39)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(51:32:51:39)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(51:32:51:39)> <hasSubExpr> <ParenExpr(51:32:51:39)> .
<ParenExpr(51:32:51:39)> <isa> "ParenExpr" .
<ParenExpr(51:32:51:39)> <hasSubExpr> <MemberExpr(51:33:51:38)> .
<MemberExpr(51:33:51:38)> <isa> "MemberExpr" .
<MemberExpr(51:33:51:38)> <hasBase> <ImplicitCastExpr(51:33:51:33)> .
<MemberExpr(51:33:51:38)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(51:33:51:33)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(51:33:51:33)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(51:33:51:33)> <hasSubExpr> <DeclRefExpr(51:33:51:33)> .
<DeclRefExpr(51:33:51:33)> <isa> "DeclRefExpr" .
<DeclRefExpr(51:33:51:33)> <hasDecl> <Var(24:2:24:9)> .
<ImplicitCastExpr(51:42:51:42)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(51:42:51:42)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(51:42:51:42)> <hasSubExpr> <DeclRefExpr(51:42:51:42)> .
<DeclRefExpr(51:42:51:42)> <isa> "DeclRefExpr" .
<DeclRefExpr(51:42:51:42)> <hasDecl> <Var(20:2:20:6)> .
<CallExpr(52:2:52:22)> <isa> "CallExpr" .
<CallExpr(52:2:52:22)> <callsFunc> <Function(362:1:362:56)> .
<CallExpr(52:2:52:22)> <hasArg(0)> <ImplicitCastExpr(52:9:52:9)> .
<CallExpr(52:2:52:22)> <hasArg(1)> <ImplicitCastExpr(52:17:52:19)> .
<ImplicitCastExpr(52:2:52:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(52:2:52:2)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(52:2:52:2)> <hasSubExpr> <DeclRefExpr(52:2:52:2)> .
<DeclRefExpr(52:2:52:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(52:2:52:2)> <hasDecl> <Function(362:1:362:56)> .
<ImplicitCastExpr(52:9:52:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(52:9:52:9)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(52:9:52:9)> <hasSubExpr> <ImplicitCastExpr(52:9:52:9)> .
<ImplicitCastExpr(52:9:52:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(52:9:52:9)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(52:9:52:9)> <hasSubExpr> <StringLiteral(52:9:52:9)> .
<StringLiteral(52:9:52:9)> <isa> "StringLiteral" .
<ImplicitCastExpr(52:17:52:19)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(52:17:52:19)> <hasCastKind> "FloatingCast" .
<ImplicitCastExpr(52:17:52:19)> <hasSubExpr> <ImplicitCastExpr(52:17:52:19)> .
<ImplicitCastExpr(52:17:52:19)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(52:17:52:19)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(52:17:52:19)> <hasSubExpr> <UnaryOperator(52:17:52:19)> .
<UnaryOperator(52:17:52:19)> <isa> "UnaryOperator" .
<UnaryOperator(52:17:52:19)> <hasOperator> "*" .
<UnaryOperator(52:17:52:19)> <hasSubExpr> <ImplicitCastExpr(52:18:52:19)> .
<ImplicitCastExpr(52:18:52:19)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(52:18:52:19)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(52:18:52:19)> <hasSubExpr> <UnaryOperator(52:18:52:19)> .
<UnaryOperator(52:18:52:19)> <isa> "UnaryOperator" .
<UnaryOperator(52:18:52:19)> <hasOperator> "*" .
<UnaryOperator(52:18:52:19)> <hasSubExpr> <ImplicitCastExpr(52:19:52:19)> .
<ImplicitCastExpr(52:19:52:19)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(52:19:52:19)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(52:19:52:19)> <hasSubExpr> <DeclRefExpr(52:19:52:19)> .
<DeclRefExpr(52:19:52:19)> <isa> "DeclRefExpr" .
<DeclRefExpr(52:19:52:19)> <hasDecl> <Var(23:2:23:10)> .
<ForStmt(54:2:57:2)> <isa> "ForStmt" .
<DeclStmt(54:7:54:16)> <isa> "DeclStmt" .
<Var(54:7:54:15)> <isa> "Var" .
<Var(54:7:54:15)> <hasName> "i" .
<Var(54:7:54:15)> <hasTypeClass> "['Builtin']" .
<Var(54:7:54:15)> <hasType> "int" .
<Var(54:7:54:15)> <isa> "LocalVarDecl" .
<Var(54:7:54:15)> <hasCanonicalDecl> <Var(54:7:54:15)> .
<Var(54:7:54:15)> <hasDefinition> <Var(54:7:54:15)> .
<Var(54:7:54:15)> <hasInit> <IntegerLiteral(54:15:54:15)> .
<IntegerLiteral(54:15:54:15)> <isa> "IntegerLiteral" .
<BinaryOperator(54:18:54:22)> <isa> "BinaryOperator" .
<BinaryOperator(54:18:54:22)> <hasOperator> "<" .
<BinaryOperator(54:18:54:22)> <hasLHS> <ImplicitCastExpr(54:18:54:18)> .
<BinaryOperator(54:18:54:22)> <hasRHS> <IntegerLiteral(54:22:54:22)> .
<ImplicitCastExpr(54:18:54:18)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(54:18:54:18)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(54:18:54:18)> <hasSubExpr> <DeclRefExpr(54:18:54:18)> .
<DeclRefExpr(54:18:54:18)> <isa> "DeclRefExpr" .
<DeclRefExpr(54:18:54:18)> <hasDecl> <Var(54:7:54:15)> .
<IntegerLiteral(54:22:54:22)> <isa> "IntegerLiteral" .
<UnaryOperator(54:25:54:27)> <isa> "UnaryOperator" .
<UnaryOperator(54:25:54:27)> <hasOperator> "++" .
<UnaryOperator(54:25:54:27)> <hasSubExpr> <DeclRefExpr(54:27:54:27)> .
<DeclRefExpr(54:27:54:27)> <isa> "DeclRefExpr" .
<DeclRefExpr(54:27:54:27)> <hasDecl> <Var(54:7:54:15)> .
<CompoundStmt(55:2:57:2)> <isa> "CompoundStmt" .
<CallExpr(56:3:56:23)> <isa> "CallExpr" .
<CallExpr(56:3:56:23)> <callsFunc> <Function(362:1:362:56)> .
<CallExpr(56:3:56:23)> <hasArg(0)> <ImplicitCastExpr(56:10:56:10)> .
<CallExpr(56:3:56:23)> <hasArg(1)> <ImplicitCastExpr(56:18:56:22)> .
<ImplicitCastExpr(56:3:56:3)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(56:3:56:3)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(56:3:56:3)> <hasSubExpr> <DeclRefExpr(56:3:56:3)> .
<DeclRefExpr(56:3:56:3)> <isa> "DeclRefExpr" .
<DeclRefExpr(56:3:56:3)> <hasDecl> <Function(362:1:362:56)> .
<ImplicitCastExpr(56:10:56:10)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(56:10:56:10)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(56:10:56:10)> <hasSubExpr> <ImplicitCastExpr(56:10:56:10)> .
<ImplicitCastExpr(56:10:56:10)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(56:10:56:10)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(56:10:56:10)> <hasSubExpr> <StringLiteral(56:10:56:10)> .
<StringLiteral(56:10:56:10)> <isa> "StringLiteral" .
<ImplicitCastExpr(56:18:56:22)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(56:18:56:22)> <hasCastKind> "FloatingCast" .
<ImplicitCastExpr(56:18:56:22)> <hasSubExpr> <ImplicitCastExpr(56:18:56:22)> .
<ImplicitCastExpr(56:18:56:22)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(56:18:56:22)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(56:18:56:22)> <hasSubExpr> <ArraySubscriptExpr(56:18:56:22)> .
<ArraySubscriptExpr(56:18:56:22)> <isa> "ArraySubscriptExpr" .
<ArraySubscriptExpr(56:18:56:22)> <hasBase> <ImplicitCastExpr(56:18:56:18)> .
<ArraySubscriptExpr(56:18:56:22)> <hasIndex> <ImplicitCastExpr(56:21:56:21)> .
<ImplicitCastExpr(56:18:56:18)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(56:18:56:18)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(56:18:56:18)> <hasSubExpr> <DeclRefExpr(56:18:56:18)> .
<DeclRefExpr(56:18:56:18)> <isa> "DeclRefExpr" .
<DeclRefExpr(56:18:56:18)> <hasDecl> <Var(28:2:28:47)> .
<ImplicitCastExpr(56:21:56:21)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(56:21:56:21)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(56:21:56:21)> <hasSubExpr> <DeclRefExpr(56:21:56:21)> .
<DeclRefExpr(56:21:56:21)> <isa> "DeclRefExpr" .
<DeclRefExpr(56:21:56:21)> <hasDecl> <Var(54:7:54:15)> .
<CallExpr(59:2:59:9)> <isa> "CallExpr" .
<CallExpr(59:2:59:9)> <callsFunc> <Function(483:1:55:54)> .
<CallExpr(59:2:59:9)> <hasArg(0)> <ImplicitCastExpr(59:7:59:7)> .
<ImplicitCastExpr(59:2:59:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(59:2:59:2)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(59:2:59:2)> <hasSubExpr> <DeclRefExpr(59:2:59:2)> .
<DeclRefExpr(59:2:59:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(59:2:59:2)> <hasDecl> <Function(483:1:55:54)> .
<ImplicitCastExpr(59:7:59:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(59:7:59:7)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(59:7:59:7)> <hasSubExpr> <ImplicitCastExpr(59:7:59:7)> .
<ImplicitCastExpr(59:7:59:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(59:7:59:7)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(59:7:59:7)> <hasSubExpr> <DeclRefExpr(59:7:59:7)> .
<DeclRefExpr(59:7:59:7)> <isa> "DeclRefExpr" .
<DeclRefExpr(59:7:59:7)> <hasDecl> <Var(28:2:28:47)> .
<ReturnStmt(61:2:61:9)> <isa> "ReturnStmt" .
<ImplicitCastExpr(61:9:61:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(61:9:61:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(61:9:61:9)> <hasSubExpr> <DeclRefExpr(61:9:61:9)> .
<DeclRefExpr(61:9:61:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(61:9:61:9)> <hasDecl> <Var(20:2:20:6)> .
