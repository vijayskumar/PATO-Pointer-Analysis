<TranslationUnit()> <isa> "TranslationUnit" .
<Var(3:1:3:11)> <isa> "Var" .
<Var(3:1:3:11)> <hasName> "glb" .
<Var(3:1:3:11)> <hasTypeClass> "['Builtin']" .
<Var(3:1:3:11)> <hasType> "int" .
<Var(3:1:3:11)> <hasCanonicalDecl> <Var(3:1:3:11)> .
<Var(3:1:3:11)> <hasDefinition> <Var(3:1:3:11)> .
<Var(3:1:3:11)> <hasInit> <IntegerLiteral(3:11:3:11)> .
<IntegerLiteral(3:11:3:11)> <isa> "IntegerLiteral" .
<Record(5:1:9:1)> <isa> "Record" .
<Record(5:1:9:1)> <hasName> "ts" .
<Record(5:1:9:1)> <hasDefinition> <Record(5:1:9:1)> .
<Record(5:1:9:1)> <hasField> <Field(6:2:6:6)> .
<Record(5:1:9:1)> <hasField> <Field(7:2:7:9)> .
<Record(5:1:9:1)> <hasField> <Field(8:2:8:7)> .
<Field(6:2:6:6)> <isa> "Field" .
<Field(6:2:6:6)> <hasName> "a" .
<Field(6:2:6:6)> <hasTypeClass> "['Builtin']" .
<Field(6:2:6:6)> <hasType> "int" .
<Field(6:2:6:6)> <hasIndex> "0" .
<Field(7:2:7:9)> <isa> "Field" .
<Field(7:2:7:9)> <hasName> "p" .
<Field(7:2:7:9)> <hasTypeClass> "['PointerType','Builtin']" .
<Field(7:2:7:9)> <hasType> "float *" .
<Field(7:2:7:9)> <hasIndex> "1" .
<Field(8:2:8:7)> <isa> "Field" .
<Field(8:2:8:7)> <hasName> "c" .
<Field(8:2:8:7)> <hasTypeClass> "['Builtin']" .
<Field(8:2:8:7)> <hasType> "char" .
<Field(8:2:8:7)> <hasIndex> "2" .
<Typedef(11:1:11:19)> <isa> "Typedef" .
<Typedef(11:1:11:19)> <hasName> "T" .
<Typedef(11:1:11:19)> <hasUnderlyingType> "struct ts" .
<Typedef(11:1:11:19)> <hasCanonicalType> "struct ts" .
<Typedef(11:1:11:19)> <hasCanonicalDecl> <Typedef(11:1:11:19)> .
<Function(13:1:13:14)> <isa> "Function" .
<Function(13:1:13:14)> <hasName> "foo" .
<Function(13:1:13:14)> <hasTypeClass> "['FunctionProto']" .
<Function(13:1:13:14)> <hasType> "int (int)" .
<Function(13:1:13:14)> <hasParm(0)> <ParmVar(13:9:13:13)> .
<ParmVar(13:9:13:13)> <isa> "ParmVar" .
<ParmVar(13:9:13:13)> <hasName> "a" .
<ParmVar(13:9:13:13)> <hasTypeClass> "['Builtin']" .
<ParmVar(13:9:13:13)> <hasType> "int" .
<ParmVar(13:9:13:13)> <hasCanonicalDecl> <ParmVar(13:9:13:13)> .
<ParmVar(13:9:13:13)> <hasDefinition> <ParmVar(13:9:13:13)> .
<Function(15:1:17:1)> <isa> "Function" .
<Function(15:1:17:1)> <hasName> "id" .
<Function(15:1:17:1)> <hasTypeClass> "['FunctionProto']" .
<Function(15:1:17:1)> <hasType> "float *(float *)" .
<Function(15:1:17:1)> <hasBody> <CompoundStmt(15:22:17:1)> .
<Function(15:1:17:1)> <hasParm(0)> <ParmVar(15:12:15:19)> .
<ParmVar(15:12:15:19)> <isa> "ParmVar" .
<ParmVar(15:12:15:19)> <hasName> "f" .
<ParmVar(15:12:15:19)> <hasTypeClass> "['PointerType','Builtin']" .
<ParmVar(15:12:15:19)> <hasType> "float *" .
<ParmVar(15:12:15:19)> <hasCanonicalDecl> <ParmVar(15:12:15:19)> .
<ParmVar(15:12:15:19)> <hasDefinition> <ParmVar(15:12:15:19)> .
<CompoundStmt(15:22:17:1)> <isa> "CompoundStmt" .
<ReturnStmt(16:2:16:9)> <isa> "ReturnStmt" .
<ReturnStmt(16:2:16:9)> <returns> <DeclRefExpr(16:9:16:9)> .
<ReturnStmt(16:2:16:9)> <inProc> <Function(15:1:17:1)> .
<ImplicitCastExpr(16:9:16:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(16:9:16:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(16:9:16:9)> <hasSubExpr> <DeclRefExpr(16:9:16:9)> .
<DeclRefExpr(16:9:16:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(16:9:16:9)> <hasDecl> <ParmVar(15:12:15:19)> .
<DeclRefExpr(16:9:16:9)> <hasName> "f" .
<Function(19:1:21:1)> <isa> "Function" .
<Function(19:1:21:1)> <hasName> "plus" .
<Function(19:1:21:1)> <hasTypeClass> "['FunctionProto']" .
<Function(19:1:21:1)> <hasType> "int (int, int)" .
<Function(19:1:21:1)> <hasBody> <CompoundStmt(19:24:21:1)> .
<Function(19:1:21:1)> <hasParm(0)> <ParmVar(19:10:19:14)> .
<Function(19:1:21:1)> <hasParm(1)> <ParmVar(19:17:19:21)> .
<ParmVar(19:10:19:14)> <isa> "ParmVar" .
<ParmVar(19:10:19:14)> <hasName> "a" .
<ParmVar(19:10:19:14)> <hasTypeClass> "['Builtin']" .
<ParmVar(19:10:19:14)> <hasType> "int" .
<ParmVar(19:10:19:14)> <hasCanonicalDecl> <ParmVar(19:10:19:14)> .
<ParmVar(19:10:19:14)> <hasDefinition> <ParmVar(19:10:19:14)> .
<ParmVar(19:17:19:21)> <isa> "ParmVar" .
<ParmVar(19:17:19:21)> <hasName> "b" .
<ParmVar(19:17:19:21)> <hasTypeClass> "['Builtin']" .
<ParmVar(19:17:19:21)> <hasType> "int" .
<ParmVar(19:17:19:21)> <hasCanonicalDecl> <ParmVar(19:17:19:21)> .
<ParmVar(19:17:19:21)> <hasDefinition> <ParmVar(19:17:19:21)> .
<CompoundStmt(19:24:21:1)> <isa> "CompoundStmt" .
<ReturnStmt(20:2:20:13)> <isa> "ReturnStmt" .
<ReturnStmt(20:2:20:13)> <returns> <BinaryOperator(20:9:20:13)> .
<ReturnStmt(20:2:20:13)> <inProc> <Function(19:1:21:1)> .
<BinaryOperator(20:9:20:13)> <isa> "BinaryOperator" .
<BinaryOperator(20:9:20:13)> <hasOperator> "+" .
<BinaryOperator(20:9:20:13)> <hasLHS> <DeclRefExpr(20:9:20:9)> .
<BinaryOperator(20:9:20:13)> <hasRHS> <DeclRefExpr(20:13:20:13)> .
<ImplicitCastExpr(20:9:20:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(20:9:20:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(20:9:20:9)> <hasSubExpr> <DeclRefExpr(20:9:20:9)> .
<DeclRefExpr(20:9:20:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(20:9:20:9)> <hasDecl> <ParmVar(19:10:19:14)> .
<DeclRefExpr(20:9:20:9)> <hasName> "a" .
<ImplicitCastExpr(20:13:20:13)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(20:13:20:13)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(20:13:20:13)> <hasSubExpr> <DeclRefExpr(20:13:20:13)> .
<DeclRefExpr(20:13:20:13)> <isa> "DeclRefExpr" .
<DeclRefExpr(20:13:20:13)> <hasDecl> <ParmVar(19:17:19:21)> .
<DeclRefExpr(20:13:20:13)> <hasName> "b" .
<Function(23:1:26:1)> <isa> "Function" .
<Function(23:1:26:1)> <hasName> "plus2" .
<Function(23:1:26:1)> <hasTypeClass> "['FunctionProto']" .
<Function(23:1:26:1)> <hasType> "int (int *, int *)" .
<Function(23:1:26:1)> <hasBody> <CompoundStmt(23:27:26:1)> .
<Function(23:1:26:1)> <hasParm(0)> <ParmVar(23:11:23:16)> .
<Function(23:1:26:1)> <hasParm(1)> <ParmVar(23:19:23:24)> .
<ParmVar(23:11:23:16)> <isa> "ParmVar" .
<ParmVar(23:11:23:16)> <hasName> "a" .
<ParmVar(23:11:23:16)> <hasTypeClass> "['PointerType','Builtin']" .
<ParmVar(23:11:23:16)> <hasType> "int *" .
<ParmVar(23:11:23:16)> <hasCanonicalDecl> <ParmVar(23:11:23:16)> .
<ParmVar(23:11:23:16)> <hasDefinition> <ParmVar(23:11:23:16)> .
<ParmVar(23:19:23:24)> <isa> "ParmVar" .
<ParmVar(23:19:23:24)> <hasName> "b" .
<ParmVar(23:19:23:24)> <hasTypeClass> "['PointerType','Builtin']" .
<ParmVar(23:19:23:24)> <hasType> "int *" .
<ParmVar(23:19:23:24)> <hasCanonicalDecl> <ParmVar(23:19:23:24)> .
<ParmVar(23:19:23:24)> <hasDefinition> <ParmVar(23:19:23:24)> .
<CompoundStmt(23:27:26:1)> <isa> "CompoundStmt" .
<DeclStmt(24:2:24:19)> <isa> "DeclStmt" .
<Var(24:2:24:18)> <isa> "Var" .
<Var(24:2:24:18)> <hasName> "c" .
<Var(24:2:24:18)> <hasTypeClass> "['Builtin']" .
<Var(24:2:24:18)> <hasType> "int" .
<Var(24:2:24:18)> <isa> "LocalVarDecl" .
<Var(24:2:24:18)> <hasCanonicalDecl> <Var(24:2:24:18)> .
<Var(24:2:24:18)> <hasDefinition> <Var(24:2:24:18)> .
<Var(24:2:24:18)> <hasInit> <BinaryOperator(24:11:24:17)> .
<ParenExpr(24:10:24:18)> <isa> "ParenExpr" .
<BinaryOperator(24:11:24:17)> <isa> "BinaryOperator" .
<BinaryOperator(24:11:24:17)> <hasOperator> "+" .
<BinaryOperator(24:11:24:17)> <hasLHS> <UnaryOperator(24:11:24:12)> .
<BinaryOperator(24:11:24:17)> <hasRHS> <UnaryOperator(24:16:24:17)> .
<ImplicitCastExpr(24:11:24:12)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(24:11:24:12)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(24:11:24:12)> <hasSubExpr> <UnaryOperator(24:11:24:12)> .
<UnaryOperator(24:11:24:12)> <isa> "UnaryOperator" .
<UnaryOperator(24:11:24:12)> <hasOperator> "*" .
<UnaryOperator(24:11:24:12)> <hasSubExpr> <DeclRefExpr(24:12:24:12)> .
<ImplicitCastExpr(24:12:24:12)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(24:12:24:12)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(24:12:24:12)> <hasSubExpr> <DeclRefExpr(24:12:24:12)> .
<DeclRefExpr(24:12:24:12)> <isa> "DeclRefExpr" .
<DeclRefExpr(24:12:24:12)> <hasDecl> <ParmVar(23:11:23:16)> .
<DeclRefExpr(24:12:24:12)> <hasName> "a" .
<ImplicitCastExpr(24:16:24:17)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(24:16:24:17)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(24:16:24:17)> <hasSubExpr> <UnaryOperator(24:16:24:17)> .
<UnaryOperator(24:16:24:17)> <isa> "UnaryOperator" .
<UnaryOperator(24:16:24:17)> <hasOperator> "*" .
<UnaryOperator(24:16:24:17)> <hasSubExpr> <DeclRefExpr(24:17:24:17)> .
<ImplicitCastExpr(24:17:24:17)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(24:17:24:17)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(24:17:24:17)> <hasSubExpr> <DeclRefExpr(24:17:24:17)> .
<DeclRefExpr(24:17:24:17)> <isa> "DeclRefExpr" .
<DeclRefExpr(24:17:24:17)> <hasDecl> <ParmVar(23:19:23:24)> .
<DeclRefExpr(24:17:24:17)> <hasName> "b" .
<ReturnStmt(25:2:25:9)> <isa> "ReturnStmt" .
<ReturnStmt(25:2:25:9)> <returns> <DeclRefExpr(25:9:25:9)> .
<ReturnStmt(25:2:25:9)> <inProc> <Function(23:1:26:1)> .
<ImplicitCastExpr(25:9:25:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(25:9:25:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(25:9:25:9)> <hasSubExpr> <DeclRefExpr(25:9:25:9)> .
<DeclRefExpr(25:9:25:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(25:9:25:9)> <hasDecl> <Var(24:2:24:18)> .
<DeclRefExpr(25:9:25:9)> <hasName> "c" .
<Function(28:1:89:1)> <isa> "Function" .
<Function(28:1:89:1)> <hasName> "main" .
<Function(28:1:89:1)> <hasTypeClass> "['FunctionNoProto']" .
<Function(28:1:89:1)> <hasType> "int ()" .
<Function(28:1:89:1)> <isa> "MainFunction" .
<Function(28:1:89:1)> <hasBody> <CompoundStmt(28:12:89:1)> .
<CompoundStmt(28:12:89:1)> <isa> "CompoundStmt" .
<DeclStmt(29:2:29:7)> <isa> "DeclStmt" .
<Var(29:2:29:6)> <isa> "Var" .
<Var(29:2:29:6)> <hasName> "c" .
<Var(29:2:29:6)> <hasTypeClass> "['Builtin']" .
<Var(29:2:29:6)> <hasType> "int" .
<Var(29:2:29:6)> <isa> "LocalVarDecl" .
<Var(29:2:29:6)> <hasCanonicalDecl> <Var(29:2:29:6)> .
<Var(29:2:29:6)> <hasDefinition> <Var(29:2:29:6)> .
<DeclStmt(30:2:30:26)> <isa> "DeclStmt" .
<Var(30:2:30:12)> <isa> "Var" .
<Var(30:2:30:12)> <hasName> "f" .
<Var(30:2:30:12)> <hasTypeClass> "['Builtin']" .
<Var(30:2:30:12)> <hasType> "float" .
<Var(30:2:30:12)> <isa> "LocalVarDecl" .
<Var(30:2:30:12)> <hasCanonicalDecl> <Var(30:2:30:12)> .
<Var(30:2:30:12)> <hasDefinition> <Var(30:2:30:12)> .
<Var(30:2:30:12)> <hasInit> <FloatingLiteral(30:12:30:12)> .
<ImplicitCastExpr(30:12:30:12)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(30:12:30:12)> <hasCastKind> "FloatingCast" .
<ImplicitCastExpr(30:12:30:12)> <hasSubExpr> <FloatingLiteral(30:12:30:12)> .
<FloatingLiteral(30:12:30:12)> <isa> "FloatingLiteral" .
<Var(30:2:30:18)> <isa> "Var" .
<Var(30:2:30:18)> <hasName> "fp" .
<Var(30:2:30:18)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(30:2:30:18)> <hasType> "float *" .
<Var(30:2:30:18)> <isa> "LocalVarDecl" .
<Var(30:2:30:18)> <hasCanonicalDecl> <Var(30:2:30:18)> .
<Var(30:2:30:18)> <hasDefinition> <Var(30:2:30:18)> .
<Var(30:2:30:23)> <isa> "Var" .
<Var(30:2:30:23)> <hasName> "fp2" .
<Var(30:2:30:23)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(30:2:30:23)> <hasType> "float *" .
<Var(30:2:30:23)> <isa> "LocalVarDecl" .
<Var(30:2:30:23)> <hasCanonicalDecl> <Var(30:2:30:23)> .
<Var(30:2:30:23)> <hasDefinition> <Var(30:2:30:23)> .
<DeclStmt(31:2:31:15)> <isa> "DeclStmt" .
<Var(31:2:31:7)> <isa> "Var" .
<Var(31:2:31:7)> <hasName> "cp" .
<Var(31:2:31:7)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(31:2:31:7)> <hasType> "int *" .
<Var(31:2:31:7)> <isa> "LocalVarDecl" .
<Var(31:2:31:7)> <hasCanonicalDecl> <Var(31:2:31:7)> .
<Var(31:2:31:7)> <hasDefinition> <Var(31:2:31:7)> .
<Var(31:2:31:12)> <isa> "Var" .
<Var(31:2:31:12)> <hasName> "cp2" .
<Var(31:2:31:12)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(31:2:31:12)> <hasType> "int *" .
<Var(31:2:31:12)> <isa> "LocalVarDecl" .
<Var(31:2:31:12)> <hasCanonicalDecl> <Var(31:2:31:12)> .
<Var(31:2:31:12)> <hasDefinition> <Var(31:2:31:12)> .
<DeclStmt(32:2:32:13)> <isa> "DeclStmt" .
<Var(32:2:32:10)> <isa> "Var" .
<Var(32:2:32:10)> <hasName> "fpp" .
<Var(32:2:32:10)> <hasTypeClass> "['PointerType','PointerType','Builtin']" .
<Var(32:2:32:10)> <hasType> "float **" .
<Var(32:2:32:10)> <isa> "LocalVarDecl" .
<Var(32:2:32:10)> <hasCanonicalDecl> <Var(32:2:32:10)> .
<Var(32:2:32:10)> <hasDefinition> <Var(32:2:32:10)> .
<DeclStmt(33:2:33:12)> <isa> "DeclStmt" .
<Var(33:2:33:4)> <isa> "Var" .
<Var(33:2:33:4)> <hasName> "st" .
<Var(33:2:33:4)> <hasTypeClass> "['Typedef']" .
<Var(33:2:33:4)> <hasTypeClass> "AggregateType" .
<Var(33:2:33:4)> <hasType> "T" .
<Var(33:2:33:4)> <isa> "LocalVarDecl" .
<Var(33:2:33:4)> <hasCanonicalDecl> <Var(33:2:33:4)> .
<Var(33:2:33:4)> <hasDefinition> <Var(33:2:33:4)> .
<Var(33:2:33:9)> <isa> "Var" .
<Var(33:2:33:9)> <hasName> "stp" .
<Var(33:2:33:9)> <hasTypeClass> "['PointerType','Typedef']" .
<Var(33:2:33:9)> <hasType> "T *" .
<Var(33:2:33:9)> <isa> "LocalVarDecl" .
<Var(33:2:33:9)> <hasCanonicalDecl> <Var(33:2:33:9)> .
<Var(33:2:33:9)> <hasDefinition> <Var(33:2:33:9)> .
<DeclStmt(35:2:35:31)> <isa> "DeclStmt" .
<Var(35:2:35:30)> <isa> "Var" .
<Var(35:2:35:30)> <hasName> "parr" .
<Var(35:2:35:30)> <hasTypeClass> "['ConstantArray']" .
<Var(35:2:35:30)> <hasTypeClass> "AggregateType" .
<Var(35:2:35:30)> <hasType> "float *[3]" .
<Var(35:2:35:30)> <hasElementTypeClass> "['PointerType','Builtin']" .
<Var(35:2:35:30)> <hasElementType> "float *" .
<Var(35:2:35:30)> <isa> "LocalVarDecl" .
<Var(35:2:35:30)> <hasCanonicalDecl> <Var(35:2:35:30)> .
<Var(35:2:35:30)> <hasDefinition> <Var(35:2:35:30)> .
<Var(35:2:35:30)> <hasInit> <InitListExpr(35:19:35:30)> .
<IntegerLiteral(35:14:35:14)> <isa> "IntegerLiteral" .
<InitListExpr(35:19:35:30)> <isa> "InitListExpr" .
<InitListExpr(35:19:35:30)> <hasSubInit(0)> "ImplicitValueInitExpr()" .
<InitListExpr(35:19:35:30)> <hasSubInit(1)> <UnaryOperator(35:27:35:28)> .
<DesignatedInitExpr(35:21:35:28)> <isa> "DesignatedInitExpr" .
<UnaryOperator(35:27:35:28)> <isa> "UnaryOperator" .
<UnaryOperator(35:27:35:28)> <hasOperator> "&" .
<UnaryOperator(35:27:35:28)> <hasSubExpr> <DeclRefExpr(35:28:35:28)> .
<DeclRefExpr(35:28:35:28)> <isa> "DeclRefExpr" .
<DeclRefExpr(35:28:35:28)> <hasDecl> <Var(30:2:30:12)> .
<DeclRefExpr(35:28:35:28)> <hasName> "f" .
<IntegerLiteral(35:22:35:22)> <isa> "IntegerLiteral" .
<InitListExpr(35:19:35:30)> <isa> "InitListExpr" .
<InitListExpr(35:19:35:30)> <hasSubInit(0)> "ImplicitValueInitExpr()" .
<InitListExpr(35:19:35:30)> <hasSubInit(1)> <UnaryOperator(35:27:35:28)> .
<ImplicitValueInitExpr()> <isa> "ImplicitValueInitExpr" .
<UnaryOperator(35:27:35:28)> <isa> "UnaryOperator" .
<UnaryOperator(35:27:35:28)> <hasOperator> "&" .
<UnaryOperator(35:27:35:28)> <hasSubExpr> <DeclRefExpr(35:28:35:28)> .
<DeclRefExpr(35:28:35:28)> <isa> "DeclRefExpr" .
<DeclRefExpr(35:28:35:28)> <hasDecl> <Var(30:2:30:12)> .
<DeclRefExpr(35:28:35:28)> <hasName> "f" .
<DeclStmt(37:2:37:48)> <isa> "DeclStmt" .
<Var(37:2:37:47)> <isa> "Var" .
<Var(37:2:37:47)> <hasName> "pl" .
<Var(37:2:37:47)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(37:2:37:47)> <hasType> "float *" .
<Var(37:2:37:47)> <isa> "LocalVarDecl" .
<Var(37:2:37:47)> <hasCanonicalDecl> <Var(37:2:37:47)> .
<Var(37:2:37:47)> <hasDefinition> <Var(37:2:37:47)> .
<Var(37:2:37:47)> <hasInit> <CallExpr(37:23:37:47)> .
<CStyleCastExpr(37:14:37:47)> <isa> "CStyleCastExpr" .
<CStyleCastExpr(37:14:37:47)> <hasCastKind> "BitCast" .
<CStyleCastExpr(37:14:37:47)> <hasSubExpr> <CallExpr(37:23:37:47)> .
<CallExpr(37:23:37:47)> <isa> "CallExpr" .
<CallExpr(37:23:37:47)> <inProc> <Function(28:1:89:1)> .
<CallExpr(37:23:37:47)> <callsFunc> <Function(466:1:211:58)> .
<CallExpr(37:23:37:47)> <calls> "malloc" .
<CallExpr(37:23:37:47)> <hasArg(0)> <BinaryOperator(37:30:37:46)> .
<ImplicitCastExpr(37:23:37:23)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(37:23:37:23)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(37:23:37:23)> <hasSubExpr> <DeclRefExpr(37:23:37:23)> .
<DeclRefExpr(37:23:37:23)> <isa> "DeclRefExpr" .
<DeclRefExpr(37:23:37:23)> <hasDecl> <Function(466:1:211:58)> .
<DeclRefExpr(37:23:37:23)> <hasName> "malloc" .
<BinaryOperator(37:30:37:46)> <isa> "BinaryOperator" .
<BinaryOperator(37:30:37:46)> <hasOperator> "*" .
<BinaryOperator(37:30:37:46)> <hasLHS> <IntegerLiteral(37:30:37:30)> .
<BinaryOperator(37:30:37:46)> <hasRHS> <UnaryExprOrTypeTraitExpr(37:34:37:46)> .
<ImplicitCastExpr(37:30:37:30)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(37:30:37:30)> <hasCastKind> "IntegralCast" .
<ImplicitCastExpr(37:30:37:30)> <hasSubExpr> <IntegerLiteral(37:30:37:30)> .
<IntegerLiteral(37:30:37:30)> <isa> "IntegerLiteral" .
<UnaryExprOrTypeTraitExpr(37:34:37:46)> <isa> "UnaryExprOrTypeTraitExpr" .
<DeclStmt(38:2:38:12)> <isa> "DeclStmt" .
<Var(38:2:38:9)> <isa> "Var" .
<Var(38:2:38:9)> <hasName> "pl2" .
<Var(38:2:38:9)> <hasTypeClass> "['PointerType','Builtin']" .
<Var(38:2:38:9)> <hasType> "float *" .
<Var(38:2:38:9)> <isa> "LocalVarDecl" .
<Var(38:2:38:9)> <hasCanonicalDecl> <Var(38:2:38:9)> .
<Var(38:2:38:9)> <hasDefinition> <Var(38:2:38:9)> .
<BinaryOperator(39:2:39:41)> <isa> "BinaryOperator" .
<BinaryOperator(39:2:39:41)> <hasOperator> "=" .
<BinaryOperator(39:2:39:41)> <hasLHS> <DeclRefExpr(39:2:39:2)> .
<BinaryOperator(39:2:39:41)> <hasRHS> <CallExpr(39:17:39:41)> .
<BinaryOperator(39:2:39:41)> <isa> "AssignmentOp" .
<DeclRefExpr(39:2:39:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(39:2:39:2)> <hasDecl> <Var(38:2:38:9)> .
<DeclRefExpr(39:2:39:2)> <hasName> "pl2" .
<CStyleCastExpr(39:8:39:41)> <isa> "CStyleCastExpr" .
<CStyleCastExpr(39:8:39:41)> <hasCastKind> "BitCast" .
<CStyleCastExpr(39:8:39:41)> <hasSubExpr> <CallExpr(39:17:39:41)> .
<CallExpr(39:17:39:41)> <isa> "CallExpr" .
<CallExpr(39:17:39:41)> <inProc> <Function(28:1:89:1)> .
<CallExpr(39:17:39:41)> <callsFunc> <Function(466:1:211:58)> .
<CallExpr(39:17:39:41)> <calls> "malloc" .
<CallExpr(39:17:39:41)> <hasArg(0)> <BinaryOperator(39:24:39:40)> .
<ImplicitCastExpr(39:17:39:17)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(39:17:39:17)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(39:17:39:17)> <hasSubExpr> <DeclRefExpr(39:17:39:17)> .
<DeclRefExpr(39:17:39:17)> <isa> "DeclRefExpr" .
<DeclRefExpr(39:17:39:17)> <hasDecl> <Function(466:1:211:58)> .
<DeclRefExpr(39:17:39:17)> <hasName> "malloc" .
<BinaryOperator(39:24:39:40)> <isa> "BinaryOperator" .
<BinaryOperator(39:24:39:40)> <hasOperator> "*" .
<BinaryOperator(39:24:39:40)> <hasLHS> <IntegerLiteral(39:24:39:24)> .
<BinaryOperator(39:24:39:40)> <hasRHS> <UnaryExprOrTypeTraitExpr(39:28:39:40)> .
<ImplicitCastExpr(39:24:39:24)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(39:24:39:24)> <hasCastKind> "IntegralCast" .
<ImplicitCastExpr(39:24:39:24)> <hasSubExpr> <IntegerLiteral(39:24:39:24)> .
<IntegerLiteral(39:24:39:24)> <isa> "IntegerLiteral" .
<UnaryExprOrTypeTraitExpr(39:28:39:40)> <isa> "UnaryExprOrTypeTraitExpr" .
<ForStmt(41:2:44:2)> <isa> "ForStmt" .
<DeclStmt(41:7:41:16)> <isa> "DeclStmt" .
<Var(41:7:41:15)> <isa> "Var" .
<Var(41:7:41:15)> <hasName> "i" .
<Var(41:7:41:15)> <hasTypeClass> "['Builtin']" .
<Var(41:7:41:15)> <hasType> "int" .
<Var(41:7:41:15)> <isa> "LocalVarDecl" .
<Var(41:7:41:15)> <hasCanonicalDecl> <Var(41:7:41:15)> .
<Var(41:7:41:15)> <hasDefinition> <Var(41:7:41:15)> .
<Var(41:7:41:15)> <hasInit> <IntegerLiteral(41:15:41:15)> .
<IntegerLiteral(41:15:41:15)> <isa> "IntegerLiteral" .
<BinaryOperator(41:18:41:22)> <isa> "BinaryOperator" .
<BinaryOperator(41:18:41:22)> <hasOperator> "<" .
<BinaryOperator(41:18:41:22)> <hasLHS> <DeclRefExpr(41:18:41:18)> .
<BinaryOperator(41:18:41:22)> <hasRHS> <IntegerLiteral(41:22:41:22)> .
<ImplicitCastExpr(41:18:41:18)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(41:18:41:18)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(41:18:41:18)> <hasSubExpr> <DeclRefExpr(41:18:41:18)> .
<DeclRefExpr(41:18:41:18)> <isa> "DeclRefExpr" .
<DeclRefExpr(41:18:41:18)> <hasDecl> <Var(41:7:41:15)> .
<DeclRefExpr(41:18:41:18)> <hasName> "i" .
<IntegerLiteral(41:22:41:22)> <isa> "IntegerLiteral" .
<UnaryOperator(41:25:41:27)> <isa> "UnaryOperator" .
<UnaryOperator(41:25:41:27)> <hasOperator> "++" .
<UnaryOperator(41:25:41:27)> <hasSubExpr> <DeclRefExpr(41:27:41:27)> .
<DeclRefExpr(41:27:41:27)> <isa> "DeclRefExpr" .
<DeclRefExpr(41:27:41:27)> <hasDecl> <Var(41:7:41:15)> .
<DeclRefExpr(41:27:41:27)> <hasName> "i" .
<CompoundStmt(42:2:44:2)> <isa> "CompoundStmt" .
<BinaryOperator(43:3:43:11)> <isa> "BinaryOperator" .
<BinaryOperator(43:3:43:11)> <hasOperator> "=" .
<BinaryOperator(43:3:43:11)> <hasLHS> <ArraySubscriptExpr(43:3:43:7)> .
<BinaryOperator(43:3:43:11)> <hasRHS> <DeclRefExpr(43:11:43:11)> .
<BinaryOperator(43:3:43:11)> <isa> "AssignmentOp" .
<ArraySubscriptExpr(43:3:43:7)> <isa> "ArraySubscriptExpr" .
<ArraySubscriptExpr(43:3:43:7)> <hasBase> <DeclRefExpr(43:3:43:3)> .
<ArraySubscriptExpr(43:3:43:7)> <hasIndex> <DeclRefExpr(43:6:43:6)> .
<ImplicitCastExpr(43:3:43:3)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(43:3:43:3)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(43:3:43:3)> <hasSubExpr> <DeclRefExpr(43:3:43:3)> .
<DeclRefExpr(43:3:43:3)> <isa> "DeclRefExpr" .
<DeclRefExpr(43:3:43:3)> <hasDecl> <Var(37:2:37:47)> .
<DeclRefExpr(43:3:43:3)> <hasName> "pl" .
<ImplicitCastExpr(43:6:43:6)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(43:6:43:6)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(43:6:43:6)> <hasSubExpr> <DeclRefExpr(43:6:43:6)> .
<DeclRefExpr(43:6:43:6)> <isa> "DeclRefExpr" .
<DeclRefExpr(43:6:43:6)> <hasDecl> <Var(41:7:41:15)> .
<DeclRefExpr(43:6:43:6)> <hasName> "i" .
<ImplicitCastExpr(43:11:43:11)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(43:11:43:11)> <hasCastKind> "IntegralToFloating" .
<ImplicitCastExpr(43:11:43:11)> <hasSubExpr> <ImplicitCastExpr(43:11:43:11)> .
<ImplicitCastExpr(43:11:43:11)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(43:11:43:11)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(43:11:43:11)> <hasSubExpr> <DeclRefExpr(43:11:43:11)> .
<DeclRefExpr(43:11:43:11)> <isa> "DeclRefExpr" .
<DeclRefExpr(43:11:43:11)> <hasDecl> <Var(41:7:41:15)> .
<DeclRefExpr(43:11:43:11)> <hasName> "i" .
<BinaryOperator(46:2:46:6)> <isa> "BinaryOperator" .
<BinaryOperator(46:2:46:6)> <hasOperator> "=" .
<BinaryOperator(46:2:46:6)> <hasLHS> <DeclRefExpr(46:2:46:2)> .
<BinaryOperator(46:2:46:6)> <hasRHS> <IntegerLiteral(46:6:46:6)> .
<BinaryOperator(46:2:46:6)> <isa> "AssignmentOp" .
<DeclRefExpr(46:2:46:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(46:2:46:2)> <hasDecl> <Var(29:2:29:6)> .
<DeclRefExpr(46:2:46:2)> <hasName> "c" .
<IntegerLiteral(46:6:46:6)> <isa> "IntegerLiteral" .
<BinaryOperator(47:2:47:9)> <isa> "BinaryOperator" .
<BinaryOperator(47:2:47:9)> <hasOperator> "=" .
<BinaryOperator(47:2:47:9)> <hasLHS> <MemberExpr(47:2:47:5)> .
<BinaryOperator(47:2:47:9)> <hasRHS> <DeclRefExpr(47:9:47:9)> .
<BinaryOperator(47:2:47:9)> <isa> "AssignmentOp" .
<MemberExpr(47:2:47:5)> <isa> "MemberExpr" .
<MemberExpr(47:2:47:5)> <hasBase> <DeclRefExpr(47:2:47:2)> .
<MemberExpr(47:2:47:5)> <hasMemberDecl> <Field(6:2:6:6)> .
<DeclRefExpr(47:2:47:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(47:2:47:2)> <hasDecl> <Var(33:2:33:4)> .
<DeclRefExpr(47:2:47:2)> <hasName> "st" .
<ImplicitCastExpr(47:9:47:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(47:9:47:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(47:9:47:9)> <hasSubExpr> <DeclRefExpr(47:9:47:9)> .
<DeclRefExpr(47:9:47:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(47:9:47:9)> <hasDecl> <Var(29:2:29:6)> .
<DeclRefExpr(47:9:47:9)> <hasName> "c" .
<BinaryOperator(49:2:49:8)> <isa> "BinaryOperator" .
<BinaryOperator(49:2:49:8)> <hasOperator> "=" .
<BinaryOperator(49:2:49:8)> <hasLHS> <DeclRefExpr(49:2:49:2)> .
<BinaryOperator(49:2:49:8)> <hasRHS> <UnaryOperator(49:7:49:8)> .
<BinaryOperator(49:2:49:8)> <isa> "AssignmentOp" .
<DeclRefExpr(49:2:49:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(49:2:49:2)> <hasDecl> <Var(31:2:31:7)> .
<DeclRefExpr(49:2:49:2)> <hasName> "cp" .
<UnaryOperator(49:7:49:8)> <isa> "UnaryOperator" .
<UnaryOperator(49:7:49:8)> <hasOperator> "&" .
<UnaryOperator(49:7:49:8)> <hasSubExpr> <DeclRefExpr(49:8:49:8)> .
<DeclRefExpr(49:8:49:8)> <isa> "DeclRefExpr" .
<DeclRefExpr(49:8:49:8)> <hasDecl> <Var(29:2:29:6)> .
<DeclRefExpr(49:8:49:8)> <hasName> "c" .
<CompoundAssignOperator(50:2:50:9)> <isa> "CompoundAssignOperator" .
<CompoundAssignOperator(50:2:50:9)> <hasOperator> "+=" .
<CompoundAssignOperator(50:2:50:9)> <hasLHS> <UnaryOperator(50:2:50:3)> .
<CompoundAssignOperator(50:2:50:9)> <hasRHS> <IntegerLiteral(50:9:50:9)> .
<CompoundAssignOperator(50:2:50:9)> <isa> "AssignmentOp" .
<UnaryOperator(50:2:50:3)> <isa> "UnaryOperator" .
<UnaryOperator(50:2:50:3)> <hasOperator> "*" .
<UnaryOperator(50:2:50:3)> <hasSubExpr> <DeclRefExpr(50:3:50:3)> .
<ImplicitCastExpr(50:3:50:3)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(50:3:50:3)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(50:3:50:3)> <hasSubExpr> <DeclRefExpr(50:3:50:3)> .
<DeclRefExpr(50:3:50:3)> <isa> "DeclRefExpr" .
<DeclRefExpr(50:3:50:3)> <hasDecl> <Var(31:2:31:7)> .
<DeclRefExpr(50:3:50:3)> <hasName> "cp" .
<IntegerLiteral(50:9:50:9)> <isa> "IntegerLiteral" .
<BinaryOperator(52:2:52:8)> <isa> "BinaryOperator" .
<BinaryOperator(52:2:52:8)> <hasOperator> "=" .
<BinaryOperator(52:2:52:8)> <hasLHS> <DeclRefExpr(52:2:52:2)> .
<BinaryOperator(52:2:52:8)> <hasRHS> <DeclRefExpr(52:8:52:8)> .
<BinaryOperator(52:2:52:8)> <isa> "AssignmentOp" .
<DeclRefExpr(52:2:52:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(52:2:52:2)> <hasDecl> <Var(31:2:31:12)> .
<DeclRefExpr(52:2:52:2)> <hasName> "cp2" .
<ImplicitCastExpr(52:8:52:8)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(52:8:52:8)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(52:8:52:8)> <hasSubExpr> <DeclRefExpr(52:8:52:8)> .
<DeclRefExpr(52:8:52:8)> <isa> "DeclRefExpr" .
<DeclRefExpr(52:8:52:8)> <hasDecl> <Var(31:2:31:7)> .
<DeclRefExpr(52:8:52:8)> <hasName> "cp" .
<BinaryOperator(54:2:54:9)> <isa> "BinaryOperator" .
<BinaryOperator(54:2:54:9)> <hasOperator> "=" .
<BinaryOperator(54:2:54:9)> <hasLHS> <DeclRefExpr(54:2:54:2)> .
<BinaryOperator(54:2:54:9)> <hasRHS> <UnaryOperator(54:8:54:9)> .
<BinaryOperator(54:2:54:9)> <isa> "AssignmentOp" .
<DeclRefExpr(54:2:54:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(54:2:54:2)> <hasDecl> <Var(33:2:33:9)> .
<DeclRefExpr(54:2:54:2)> <hasName> "stp" .
<UnaryOperator(54:8:54:9)> <isa> "UnaryOperator" .
<UnaryOperator(54:8:54:9)> <hasOperator> "&" .
<UnaryOperator(54:8:54:9)> <hasSubExpr> <DeclRefExpr(54:9:54:9)> .
<DeclRefExpr(54:9:54:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(54:9:54:9)> <hasDecl> <Var(33:2:33:4)> .
<DeclRefExpr(54:9:54:9)> <hasName> "st" .
<BinaryOperator(56:2:56:12)> <isa> "BinaryOperator" .
<BinaryOperator(56:2:56:12)> <hasOperator> "=" .
<BinaryOperator(56:2:56:12)> <hasLHS> <MemberExpr(56:2:56:7)> .
<BinaryOperator(56:2:56:12)> <hasRHS> <UnaryOperator(56:11:56:12)> .
<BinaryOperator(56:2:56:12)> <isa> "AssignmentOp" .
<MemberExpr(56:2:56:7)> <isa> "MemberExpr" .
<MemberExpr(56:2:56:7)> <hasBase> <DeclRefExpr(56:2:56:2)> .
<MemberExpr(56:2:56:7)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(56:2:56:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(56:2:56:2)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(56:2:56:2)> <hasSubExpr> <DeclRefExpr(56:2:56:2)> .
<DeclRefExpr(56:2:56:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(56:2:56:2)> <hasDecl> <Var(33:2:33:9)> .
<DeclRefExpr(56:2:56:2)> <hasName> "stp" .
<UnaryOperator(56:11:56:12)> <isa> "UnaryOperator" .
<UnaryOperator(56:11:56:12)> <hasOperator> "&" .
<UnaryOperator(56:11:56:12)> <hasSubExpr> <DeclRefExpr(56:12:56:12)> .
<DeclRefExpr(56:12:56:12)> <isa> "DeclRefExpr" .
<DeclRefExpr(56:12:56:12)> <hasDecl> <Var(30:2:30:12)> .
<DeclRefExpr(56:12:56:12)> <hasName> "f" .
<BinaryOperator(57:2:57:16)> <isa> "BinaryOperator" .
<BinaryOperator(57:2:57:16)> <hasOperator> "=" .
<BinaryOperator(57:2:57:16)> <hasLHS> <DeclRefExpr(57:2:57:2)> .
<BinaryOperator(57:2:57:16)> <hasRHS> <UnaryOperator(57:8:57:16)> .
<BinaryOperator(57:2:57:16)> <isa> "AssignmentOp" .
<DeclRefExpr(57:2:57:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(57:2:57:2)> <hasDecl> <Var(32:2:32:10)> .
<DeclRefExpr(57:2:57:2)> <hasName> "fpp" .
<UnaryOperator(57:8:57:16)> <isa> "UnaryOperator" .
<UnaryOperator(57:8:57:16)> <hasOperator> "&" .
<UnaryOperator(57:8:57:16)> <hasSubExpr> <MemberExpr(57:10:57:15)> .
<ParenExpr(57:9:57:16)> <isa> "ParenExpr" .
<MemberExpr(57:10:57:15)> <isa> "MemberExpr" .
<MemberExpr(57:10:57:15)> <hasBase> <DeclRefExpr(57:10:57:10)> .
<MemberExpr(57:10:57:15)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(57:10:57:10)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(57:10:57:10)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(57:10:57:10)> <hasSubExpr> <DeclRefExpr(57:10:57:10)> .
<DeclRefExpr(57:10:57:10)> <isa> "DeclRefExpr" .
<DeclRefExpr(57:10:57:10)> <hasDecl> <Var(33:2:33:9)> .
<DeclRefExpr(57:10:57:10)> <hasName> "stp" .
<CompoundAssignOperator(59:2:59:14)> <isa> "CompoundAssignOperator" .
<CompoundAssignOperator(59:2:59:14)> <hasOperator> "+=" .
<CompoundAssignOperator(59:2:59:14)> <hasLHS> <DeclRefExpr(59:2:59:2)> .
<CompoundAssignOperator(59:2:59:14)> <hasRHS> <UnaryOperator(59:7:59:14)> .
<CompoundAssignOperator(59:2:59:14)> <isa> "AssignmentOp" .
<DeclRefExpr(59:2:59:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(59:2:59:2)> <hasDecl> <Var(30:2:30:12)> .
<DeclRefExpr(59:2:59:2)> <hasName> "f" .
<ImplicitCastExpr(59:7:59:14)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(59:7:59:14)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(59:7:59:14)> <hasSubExpr> <UnaryOperator(59:7:59:14)> .
<UnaryOperator(59:7:59:14)> <isa> "UnaryOperator" .
<UnaryOperator(59:7:59:14)> <hasOperator> "*" .
<UnaryOperator(59:7:59:14)> <hasSubExpr> <ArraySubscriptExpr(59:8:59:14)> .
<ImplicitCastExpr(59:8:59:14)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(59:8:59:14)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(59:8:59:14)> <hasSubExpr> <ArraySubscriptExpr(59:8:59:14)> .
<ArraySubscriptExpr(59:8:59:14)> <isa> "ArraySubscriptExpr" .
<ArraySubscriptExpr(59:8:59:14)> <hasBase> <DeclRefExpr(59:8:59:8)> .
<ArraySubscriptExpr(59:8:59:14)> <hasIndex> <IntegerLiteral(59:13:59:13)> .
<ImplicitCastExpr(59:8:59:8)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(59:8:59:8)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(59:8:59:8)> <hasSubExpr> <DeclRefExpr(59:8:59:8)> .
<DeclRefExpr(59:8:59:8)> <isa> "DeclRefExpr" .
<DeclRefExpr(59:8:59:8)> <hasDecl> <Var(35:2:35:30)> .
<DeclRefExpr(59:8:59:8)> <hasName> "parr" .
<IntegerLiteral(59:13:59:13)> <isa> "IntegerLiteral" .
<BinaryOperator(61:2:61:35)> <isa> "BinaryOperator" .
<BinaryOperator(61:2:61:35)> <hasOperator> "=" .
<BinaryOperator(61:2:61:35)> <hasLHS> <DeclRefExpr(61:2:61:2)> .
<BinaryOperator(61:2:61:35)> <hasRHS> <CallExpr(61:6:61:35)> .
<BinaryOperator(61:2:61:35)> <isa> "AssignmentOp" .
<DeclRefExpr(61:2:61:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(61:2:61:2)> <hasDecl> <Var(29:2:29:6)> .
<DeclRefExpr(61:2:61:2)> <hasName> "c" .
<CallExpr(61:6:61:35)> <isa> "CallExpr" .
<CallExpr(61:6:61:35)> <inProc> <Function(28:1:89:1)> .
<CallExpr(61:6:61:35)> <callsFunc> <Function(19:1:21:1)> .
<CallExpr(61:6:61:35)> <calls> "plus" .
<CallExpr(61:6:61:35)> <hasArg(0)> <MemberExpr(61:11:61:16)> .
<CallExpr(61:6:61:35)> <hasArg(1)> <UnaryOperator(61:25:61:33)> .
<ImplicitCastExpr(61:6:61:6)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(61:6:61:6)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(61:6:61:6)> <hasSubExpr> <DeclRefExpr(61:6:61:6)> .
<DeclRefExpr(61:6:61:6)> <isa> "DeclRefExpr" .
<DeclRefExpr(61:6:61:6)> <hasDecl> <Function(19:1:21:1)> .
<DeclRefExpr(61:6:61:6)> <hasName> "plus" .
<ImplicitCastExpr(61:11:61:16)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(61:11:61:16)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(61:11:61:16)> <hasSubExpr> <MemberExpr(61:11:61:16)> .
<MemberExpr(61:11:61:16)> <isa> "MemberExpr" .
<MemberExpr(61:11:61:16)> <hasBase> <DeclRefExpr(61:11:61:11)> .
<MemberExpr(61:11:61:16)> <hasMemberDecl> <Field(6:2:6:6)> .
<ImplicitCastExpr(61:11:61:11)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(61:11:61:11)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(61:11:61:11)> <hasSubExpr> <DeclRefExpr(61:11:61:11)> .
<DeclRefExpr(61:11:61:11)> <isa> "DeclRefExpr" .
<DeclRefExpr(61:11:61:11)> <hasDecl> <Var(33:2:33:9)> .
<DeclRefExpr(61:11:61:11)> <hasName> "stp" .
<CStyleCastExpr(61:19:61:34)> <isa> "CStyleCastExpr" .
<CStyleCastExpr(61:19:61:34)> <hasCastKind> "FloatingToIntegral" .
<CStyleCastExpr(61:19:61:34)> <hasSubExpr> <ImplicitCastExpr(61:24:61:34)> .
<ImplicitCastExpr(61:24:61:34)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(61:24:61:34)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(61:24:61:34)> <hasSubExpr> <ParenExpr(61:24:61:34)> .
<ParenExpr(61:24:61:34)> <isa> "ParenExpr" .
<UnaryOperator(61:25:61:33)> <isa> "UnaryOperator" .
<UnaryOperator(61:25:61:33)> <hasOperator> "*" .
<UnaryOperator(61:25:61:33)> <hasSubExpr> <MemberExpr(61:27:61:32)> .
<ImplicitCastExpr(61:26:61:33)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(61:26:61:33)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(61:26:61:33)> <hasSubExpr> <ParenExpr(61:26:61:33)> .
<ParenExpr(61:26:61:33)> <isa> "ParenExpr" .
<MemberExpr(61:27:61:32)> <isa> "MemberExpr" .
<MemberExpr(61:27:61:32)> <hasBase> <DeclRefExpr(61:27:61:27)> .
<MemberExpr(61:27:61:32)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(61:27:61:27)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(61:27:61:27)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(61:27:61:27)> <hasSubExpr> <DeclRefExpr(61:27:61:27)> .
<DeclRefExpr(61:27:61:27)> <isa> "DeclRefExpr" .
<DeclRefExpr(61:27:61:27)> <hasDecl> <Var(33:2:33:9)> .
<DeclRefExpr(61:27:61:27)> <hasName> "stp" .
<CompoundAssignOperator(62:2:62:7)> <isa> "CompoundAssignOperator" .
<CompoundAssignOperator(62:2:62:7)> <hasOperator> "+=" .
<CompoundAssignOperator(62:2:62:7)> <hasLHS> <DeclRefExpr(62:2:62:2)> .
<CompoundAssignOperator(62:2:62:7)> <hasRHS> <DeclRefExpr(62:7:62:7)> .
<CompoundAssignOperator(62:2:62:7)> <isa> "AssignmentOp" .
<DeclRefExpr(62:2:62:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(62:2:62:2)> <hasDecl> <Var(29:2:29:6)> .
<DeclRefExpr(62:2:62:2)> <hasName> "c" .
<ImplicitCastExpr(62:7:62:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(62:7:62:7)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(62:7:62:7)> <hasSubExpr> <DeclRefExpr(62:7:62:7)> .
<DeclRefExpr(62:7:62:7)> <isa> "DeclRefExpr" .
<DeclRefExpr(62:7:62:7)> <hasDecl> <Var(3:1:3:11)> .
<DeclRefExpr(62:7:62:7)> <hasName> "glb" .
<BinaryOperator(64:2:64:12)> <isa> "BinaryOperator" .
<BinaryOperator(64:2:64:12)> <hasOperator> "=" .
<BinaryOperator(64:2:64:12)> <hasLHS> <DeclRefExpr(64:2:64:2)> .
<BinaryOperator(64:2:64:12)> <hasRHS> <MemberExpr(64:7:64:12)> .
<BinaryOperator(64:2:64:12)> <isa> "AssignmentOp" .
<DeclRefExpr(64:2:64:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(64:2:64:2)> <hasDecl> <Var(30:2:30:18)> .
<DeclRefExpr(64:2:64:2)> <hasName> "fp" .
<ImplicitCastExpr(64:7:64:12)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(64:7:64:12)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(64:7:64:12)> <hasSubExpr> <MemberExpr(64:7:64:12)> .
<MemberExpr(64:7:64:12)> <isa> "MemberExpr" .
<MemberExpr(64:7:64:12)> <hasBase> <DeclRefExpr(64:7:64:7)> .
<MemberExpr(64:7:64:12)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(64:7:64:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(64:7:64:7)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(64:7:64:7)> <hasSubExpr> <DeclRefExpr(64:7:64:7)> .
<DeclRefExpr(64:7:64:7)> <isa> "DeclRefExpr" .
<DeclRefExpr(64:7:64:7)> <hasDecl> <Var(33:2:33:9)> .
<DeclRefExpr(64:7:64:7)> <hasName> "stp" .
<BinaryOperator(66:2:66:9)> <isa> "BinaryOperator" .
<BinaryOperator(66:2:66:9)> <hasOperator> "=" .
<BinaryOperator(66:2:66:9)> <hasLHS> <UnaryOperator(66:2:66:3)> .
<BinaryOperator(66:2:66:9)> <hasRHS> <DeclRefExpr(66:9:66:9)> .
<BinaryOperator(66:2:66:9)> <isa> "AssignmentOp" .
<UnaryOperator(66:2:66:3)> <isa> "UnaryOperator" .
<UnaryOperator(66:2:66:3)> <hasOperator> "*" .
<UnaryOperator(66:2:66:3)> <hasSubExpr> <DeclRefExpr(66:3:66:3)> .
<ImplicitCastExpr(66:3:66:3)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(66:3:66:3)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(66:3:66:3)> <hasSubExpr> <DeclRefExpr(66:3:66:3)> .
<DeclRefExpr(66:3:66:3)> <isa> "DeclRefExpr" .
<DeclRefExpr(66:3:66:3)> <hasDecl> <Var(32:2:32:10)> .
<DeclRefExpr(66:3:66:3)> <hasName> "fpp" .
<ImplicitCastExpr(66:9:66:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(66:9:66:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(66:9:66:9)> <hasSubExpr> <DeclRefExpr(66:9:66:9)> .
<DeclRefExpr(66:9:66:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(66:9:66:9)> <hasDecl> <Var(30:2:30:18)> .
<DeclRefExpr(66:9:66:9)> <hasName> "fp" .
<BinaryOperator(68:2:68:8)> <isa> "BinaryOperator" .
<BinaryOperator(68:2:68:8)> <hasOperator> "=" .
<BinaryOperator(68:2:68:8)> <hasLHS> <DeclRefExpr(68:2:68:2)> .
<BinaryOperator(68:2:68:8)> <hasRHS> <UnaryOperator(68:7:68:8)> .
<BinaryOperator(68:2:68:8)> <isa> "AssignmentOp" .
<DeclRefExpr(68:2:68:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(68:2:68:2)> <hasDecl> <Var(30:2:30:18)> .
<DeclRefExpr(68:2:68:2)> <hasName> "fp" .
<ImplicitCastExpr(68:7:68:8)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(68:7:68:8)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(68:7:68:8)> <hasSubExpr> <UnaryOperator(68:7:68:8)> .
<UnaryOperator(68:7:68:8)> <isa> "UnaryOperator" .
<UnaryOperator(68:7:68:8)> <hasOperator> "*" .
<UnaryOperator(68:7:68:8)> <hasSubExpr> <DeclRefExpr(68:8:68:8)> .
<ImplicitCastExpr(68:8:68:8)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(68:8:68:8)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(68:8:68:8)> <hasSubExpr> <DeclRefExpr(68:8:68:8)> .
<DeclRefExpr(68:8:68:8)> <isa> "DeclRefExpr" .
<DeclRefExpr(68:8:68:8)> <hasDecl> <Var(32:2:32:10)> .
<DeclRefExpr(68:8:68:8)> <hasName> "fpp" .
<BinaryOperator(70:2:70:12)> <isa> "BinaryOperator" .
<BinaryOperator(70:2:70:12)> <hasOperator> "=" .
<BinaryOperator(70:2:70:12)> <hasLHS> <ArraySubscriptExpr(70:2:70:8)> .
<BinaryOperator(70:2:70:12)> <hasRHS> <DeclRefExpr(70:12:70:12)> .
<BinaryOperator(70:2:70:12)> <isa> "AssignmentOp" .
<ArraySubscriptExpr(70:2:70:8)> <isa> "ArraySubscriptExpr" .
<ArraySubscriptExpr(70:2:70:8)> <hasBase> <DeclRefExpr(70:2:70:2)> .
<ArraySubscriptExpr(70:2:70:8)> <hasIndex> <IntegerLiteral(70:7:70:7)> .
<ImplicitCastExpr(70:2:70:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(70:2:70:2)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(70:2:70:2)> <hasSubExpr> <DeclRefExpr(70:2:70:2)> .
<DeclRefExpr(70:2:70:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(70:2:70:2)> <hasDecl> <Var(35:2:35:30)> .
<DeclRefExpr(70:2:70:2)> <hasName> "parr" .
<IntegerLiteral(70:7:70:7)> <isa> "IntegerLiteral" .
<ImplicitCastExpr(70:12:70:12)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(70:12:70:12)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(70:12:70:12)> <hasSubExpr> <DeclRefExpr(70:12:70:12)> .
<DeclRefExpr(70:12:70:12)> <isa> "DeclRefExpr" .
<DeclRefExpr(70:12:70:12)> <hasDecl> <Var(30:2:30:18)> .
<DeclRefExpr(70:12:70:12)> <hasName> "fp" .
<BinaryOperator(72:2:72:14)> <isa> "BinaryOperator" .
<BinaryOperator(72:2:72:14)> <hasOperator> "=" .
<BinaryOperator(72:2:72:14)> <hasLHS> <DeclRefExpr(72:2:72:2)> .
<BinaryOperator(72:2:72:14)> <hasRHS> <ArraySubscriptExpr(72:8:72:14)> .
<BinaryOperator(72:2:72:14)> <isa> "AssignmentOp" .
<DeclRefExpr(72:2:72:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(72:2:72:2)> <hasDecl> <Var(30:2:30:23)> .
<DeclRefExpr(72:2:72:2)> <hasName> "fp2" .
<ImplicitCastExpr(72:8:72:14)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(72:8:72:14)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(72:8:72:14)> <hasSubExpr> <ArraySubscriptExpr(72:8:72:14)> .
<ArraySubscriptExpr(72:8:72:14)> <isa> "ArraySubscriptExpr" .
<ArraySubscriptExpr(72:8:72:14)> <hasBase> <DeclRefExpr(72:8:72:8)> .
<ArraySubscriptExpr(72:8:72:14)> <hasIndex> <IntegerLiteral(72:13:72:13)> .
<ImplicitCastExpr(72:8:72:8)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(72:8:72:8)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(72:8:72:8)> <hasSubExpr> <DeclRefExpr(72:8:72:8)> .
<DeclRefExpr(72:8:72:8)> <isa> "DeclRefExpr" .
<DeclRefExpr(72:8:72:8)> <hasDecl> <Var(35:2:35:30)> .
<DeclRefExpr(72:8:72:8)> <hasName> "parr" .
<IntegerLiteral(72:13:72:13)> <isa> "IntegerLiteral" .
<BinaryOperator(74:2:74:15)> <isa> "BinaryOperator" .
<BinaryOperator(74:2:74:15)> <hasOperator> "=" .
<BinaryOperator(74:2:74:15)> <hasLHS> <DeclRefExpr(74:2:74:2)> .
<BinaryOperator(74:2:74:15)> <hasRHS> <UnaryOperator(74:8:74:15)> .
<BinaryOperator(74:2:74:15)> <isa> "AssignmentOp" .
<DeclRefExpr(74:2:74:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(74:2:74:2)> <hasDecl> <Var(32:2:32:10)> .
<DeclRefExpr(74:2:74:2)> <hasName> "fpp" .
<UnaryOperator(74:8:74:15)> <isa> "UnaryOperator" .
<UnaryOperator(74:8:74:15)> <hasOperator> "&" .
<UnaryOperator(74:8:74:15)> <hasSubExpr> <ArraySubscriptExpr(74:9:74:15)> .
<ArraySubscriptExpr(74:9:74:15)> <isa> "ArraySubscriptExpr" .
<ArraySubscriptExpr(74:9:74:15)> <hasBase> <DeclRefExpr(74:9:74:9)> .
<ArraySubscriptExpr(74:9:74:15)> <hasIndex> <IntegerLiteral(74:14:74:14)> .
<ImplicitCastExpr(74:9:74:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(74:9:74:9)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(74:9:74:9)> <hasSubExpr> <DeclRefExpr(74:9:74:9)> .
<DeclRefExpr(74:9:74:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(74:9:74:9)> <hasDecl> <Var(35:2:35:30)> .
<DeclRefExpr(74:9:74:9)> <hasName> "parr" .
<IntegerLiteral(74:14:74:14)> <isa> "IntegerLiteral" .
<CallExpr(76:2:76:43)> <isa> "CallExpr" .
<CallExpr(76:2:76:43)> <inProc> <Function(28:1:89:1)> .
<CallExpr(76:2:76:43)> <callsFunc> <Function(362:1:362:56)> .
<CallExpr(76:2:76:43)> <calls> "printf" .
<CallExpr(76:2:76:43)> <hasArg(0)> <StringLiteral(76:9:76:9)> .
<CallExpr(76:2:76:43)> <hasArg(1)> <MemberExpr(76:23:76:28)> .
<CallExpr(76:2:76:43)> <hasArg(2)> <UnaryOperator(76:31:76:39)> .
<CallExpr(76:2:76:43)> <hasArg(3)> <DeclRefExpr(76:42:76:42)> .
<ImplicitCastExpr(76:2:76:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(76:2:76:2)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(76:2:76:2)> <hasSubExpr> <DeclRefExpr(76:2:76:2)> .
<DeclRefExpr(76:2:76:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(76:2:76:2)> <hasDecl> <Function(362:1:362:56)> .
<DeclRefExpr(76:2:76:2)> <hasName> "printf" .
<ImplicitCastExpr(76:9:76:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(76:9:76:9)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(76:9:76:9)> <hasSubExpr> <ImplicitCastExpr(76:9:76:9)> .
<ImplicitCastExpr(76:9:76:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(76:9:76:9)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(76:9:76:9)> <hasSubExpr> <StringLiteral(76:9:76:9)> .
<StringLiteral(76:9:76:9)> <isa> "StringLiteral" .
<ImplicitCastExpr(76:23:76:28)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(76:23:76:28)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(76:23:76:28)> <hasSubExpr> <MemberExpr(76:23:76:28)> .
<MemberExpr(76:23:76:28)> <isa> "MemberExpr" .
<MemberExpr(76:23:76:28)> <hasBase> <DeclRefExpr(76:23:76:23)> .
<MemberExpr(76:23:76:28)> <hasMemberDecl> <Field(6:2:6:6)> .
<ImplicitCastExpr(76:23:76:23)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(76:23:76:23)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(76:23:76:23)> <hasSubExpr> <DeclRefExpr(76:23:76:23)> .
<DeclRefExpr(76:23:76:23)> <isa> "DeclRefExpr" .
<DeclRefExpr(76:23:76:23)> <hasDecl> <Var(33:2:33:9)> .
<DeclRefExpr(76:23:76:23)> <hasName> "stp" .
<ImplicitCastExpr(76:31:76:39)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(76:31:76:39)> <hasCastKind> "FloatingCast" .
<ImplicitCastExpr(76:31:76:39)> <hasSubExpr> <ImplicitCastExpr(76:31:76:39)> .
<ImplicitCastExpr(76:31:76:39)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(76:31:76:39)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(76:31:76:39)> <hasSubExpr> <UnaryOperator(76:31:76:39)> .
<UnaryOperator(76:31:76:39)> <isa> "UnaryOperator" .
<UnaryOperator(76:31:76:39)> <hasOperator> "*" .
<UnaryOperator(76:31:76:39)> <hasSubExpr> <MemberExpr(76:33:76:38)> .
<ImplicitCastExpr(76:32:76:39)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(76:32:76:39)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(76:32:76:39)> <hasSubExpr> <ParenExpr(76:32:76:39)> .
<ParenExpr(76:32:76:39)> <isa> "ParenExpr" .
<MemberExpr(76:33:76:38)> <isa> "MemberExpr" .
<MemberExpr(76:33:76:38)> <hasBase> <DeclRefExpr(76:33:76:33)> .
<MemberExpr(76:33:76:38)> <hasMemberDecl> <Field(7:2:7:9)> .
<ImplicitCastExpr(76:33:76:33)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(76:33:76:33)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(76:33:76:33)> <hasSubExpr> <DeclRefExpr(76:33:76:33)> .
<DeclRefExpr(76:33:76:33)> <isa> "DeclRefExpr" .
<DeclRefExpr(76:33:76:33)> <hasDecl> <Var(33:2:33:9)> .
<DeclRefExpr(76:33:76:33)> <hasName> "stp" .
<ImplicitCastExpr(76:42:76:42)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(76:42:76:42)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(76:42:76:42)> <hasSubExpr> <DeclRefExpr(76:42:76:42)> .
<DeclRefExpr(76:42:76:42)> <isa> "DeclRefExpr" .
<DeclRefExpr(76:42:76:42)> <hasDecl> <Var(29:2:29:6)> .
<DeclRefExpr(76:42:76:42)> <hasName> "c" .
<CallExpr(77:2:77:22)> <isa> "CallExpr" .
<CallExpr(77:2:77:22)> <inProc> <Function(28:1:89:1)> .
<CallExpr(77:2:77:22)> <callsFunc> <Function(362:1:362:56)> .
<CallExpr(77:2:77:22)> <calls> "printf" .
<CallExpr(77:2:77:22)> <hasArg(0)> <StringLiteral(77:9:77:9)> .
<CallExpr(77:2:77:22)> <hasArg(1)> <UnaryOperator(77:17:77:19)> .
<ImplicitCastExpr(77:2:77:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(77:2:77:2)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(77:2:77:2)> <hasSubExpr> <DeclRefExpr(77:2:77:2)> .
<DeclRefExpr(77:2:77:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(77:2:77:2)> <hasDecl> <Function(362:1:362:56)> .
<DeclRefExpr(77:2:77:2)> <hasName> "printf" .
<ImplicitCastExpr(77:9:77:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(77:9:77:9)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(77:9:77:9)> <hasSubExpr> <ImplicitCastExpr(77:9:77:9)> .
<ImplicitCastExpr(77:9:77:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(77:9:77:9)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(77:9:77:9)> <hasSubExpr> <StringLiteral(77:9:77:9)> .
<StringLiteral(77:9:77:9)> <isa> "StringLiteral" .
<ImplicitCastExpr(77:17:77:19)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(77:17:77:19)> <hasCastKind> "FloatingCast" .
<ImplicitCastExpr(77:17:77:19)> <hasSubExpr> <ImplicitCastExpr(77:17:77:19)> .
<ImplicitCastExpr(77:17:77:19)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(77:17:77:19)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(77:17:77:19)> <hasSubExpr> <UnaryOperator(77:17:77:19)> .
<UnaryOperator(77:17:77:19)> <isa> "UnaryOperator" .
<UnaryOperator(77:17:77:19)> <hasOperator> "*" .
<UnaryOperator(77:17:77:19)> <hasSubExpr> <UnaryOperator(77:18:77:19)> .
<ImplicitCastExpr(77:18:77:19)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(77:18:77:19)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(77:18:77:19)> <hasSubExpr> <UnaryOperator(77:18:77:19)> .
<UnaryOperator(77:18:77:19)> <isa> "UnaryOperator" .
<UnaryOperator(77:18:77:19)> <hasOperator> "*" .
<UnaryOperator(77:18:77:19)> <hasSubExpr> <DeclRefExpr(77:19:77:19)> .
<ImplicitCastExpr(77:19:77:19)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(77:19:77:19)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(77:19:77:19)> <hasSubExpr> <DeclRefExpr(77:19:77:19)> .
<DeclRefExpr(77:19:77:19)> <isa> "DeclRefExpr" .
<DeclRefExpr(77:19:77:19)> <hasDecl> <Var(32:2:32:10)> .
<DeclRefExpr(77:19:77:19)> <hasName> "fpp" .
<ForStmt(79:2:82:2)> <isa> "ForStmt" .
<DeclStmt(79:7:79:16)> <isa> "DeclStmt" .
<Var(79:7:79:15)> <isa> "Var" .
<Var(79:7:79:15)> <hasName> "i" .
<Var(79:7:79:15)> <hasTypeClass> "['Builtin']" .
<Var(79:7:79:15)> <hasType> "int" .
<Var(79:7:79:15)> <isa> "LocalVarDecl" .
<Var(79:7:79:15)> <hasCanonicalDecl> <Var(79:7:79:15)> .
<Var(79:7:79:15)> <hasDefinition> <Var(79:7:79:15)> .
<Var(79:7:79:15)> <hasInit> <IntegerLiteral(79:15:79:15)> .
<IntegerLiteral(79:15:79:15)> <isa> "IntegerLiteral" .
<BinaryOperator(79:18:79:22)> <isa> "BinaryOperator" .
<BinaryOperator(79:18:79:22)> <hasOperator> "<" .
<BinaryOperator(79:18:79:22)> <hasLHS> <DeclRefExpr(79:18:79:18)> .
<BinaryOperator(79:18:79:22)> <hasRHS> <IntegerLiteral(79:22:79:22)> .
<ImplicitCastExpr(79:18:79:18)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(79:18:79:18)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(79:18:79:18)> <hasSubExpr> <DeclRefExpr(79:18:79:18)> .
<DeclRefExpr(79:18:79:18)> <isa> "DeclRefExpr" .
<DeclRefExpr(79:18:79:18)> <hasDecl> <Var(79:7:79:15)> .
<DeclRefExpr(79:18:79:18)> <hasName> "i" .
<IntegerLiteral(79:22:79:22)> <isa> "IntegerLiteral" .
<UnaryOperator(79:25:79:27)> <isa> "UnaryOperator" .
<UnaryOperator(79:25:79:27)> <hasOperator> "++" .
<UnaryOperator(79:25:79:27)> <hasSubExpr> <DeclRefExpr(79:27:79:27)> .
<DeclRefExpr(79:27:79:27)> <isa> "DeclRefExpr" .
<DeclRefExpr(79:27:79:27)> <hasDecl> <Var(79:7:79:15)> .
<DeclRefExpr(79:27:79:27)> <hasName> "i" .
<CompoundStmt(80:2:82:2)> <isa> "CompoundStmt" .
<CallExpr(81:3:81:23)> <isa> "CallExpr" .
<CallExpr(81:3:81:23)> <inProc> <Function(28:1:89:1)> .
<CallExpr(81:3:81:23)> <callsFunc> <Function(362:1:362:56)> .
<CallExpr(81:3:81:23)> <calls> "printf" .
<CallExpr(81:3:81:23)> <hasArg(0)> <StringLiteral(81:10:81:10)> .
<CallExpr(81:3:81:23)> <hasArg(1)> <ArraySubscriptExpr(81:18:81:22)> .
<ImplicitCastExpr(81:3:81:3)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(81:3:81:3)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(81:3:81:3)> <hasSubExpr> <DeclRefExpr(81:3:81:3)> .
<DeclRefExpr(81:3:81:3)> <isa> "DeclRefExpr" .
<DeclRefExpr(81:3:81:3)> <hasDecl> <Function(362:1:362:56)> .
<DeclRefExpr(81:3:81:3)> <hasName> "printf" .
<ImplicitCastExpr(81:10:81:10)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(81:10:81:10)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(81:10:81:10)> <hasSubExpr> <ImplicitCastExpr(81:10:81:10)> .
<ImplicitCastExpr(81:10:81:10)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(81:10:81:10)> <hasCastKind> "ArrayToPointerDecay" .
<ImplicitCastExpr(81:10:81:10)> <hasSubExpr> <StringLiteral(81:10:81:10)> .
<StringLiteral(81:10:81:10)> <isa> "StringLiteral" .
<ImplicitCastExpr(81:18:81:22)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(81:18:81:22)> <hasCastKind> "FloatingCast" .
<ImplicitCastExpr(81:18:81:22)> <hasSubExpr> <ImplicitCastExpr(81:18:81:22)> .
<ImplicitCastExpr(81:18:81:22)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(81:18:81:22)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(81:18:81:22)> <hasSubExpr> <ArraySubscriptExpr(81:18:81:22)> .
<ArraySubscriptExpr(81:18:81:22)> <isa> "ArraySubscriptExpr" .
<ArraySubscriptExpr(81:18:81:22)> <hasBase> <DeclRefExpr(81:18:81:18)> .
<ArraySubscriptExpr(81:18:81:22)> <hasIndex> <DeclRefExpr(81:21:81:21)> .
<ImplicitCastExpr(81:18:81:18)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(81:18:81:18)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(81:18:81:18)> <hasSubExpr> <DeclRefExpr(81:18:81:18)> .
<DeclRefExpr(81:18:81:18)> <isa> "DeclRefExpr" .
<DeclRefExpr(81:18:81:18)> <hasDecl> <Var(37:2:37:47)> .
<DeclRefExpr(81:18:81:18)> <hasName> "pl" .
<ImplicitCastExpr(81:21:81:21)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(81:21:81:21)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(81:21:81:21)> <hasSubExpr> <DeclRefExpr(81:21:81:21)> .
<DeclRefExpr(81:21:81:21)> <isa> "DeclRefExpr" .
<DeclRefExpr(81:21:81:21)> <hasDecl> <Var(79:7:79:15)> .
<DeclRefExpr(81:21:81:21)> <hasName> "i" .
<CallExpr(84:2:84:9)> <isa> "CallExpr" .
<CallExpr(84:2:84:9)> <inProc> <Function(28:1:89:1)> .
<CallExpr(84:2:84:9)> <callsFunc> <Function(483:1:55:54)> .
<CallExpr(84:2:84:9)> <calls> "free" .
<CallExpr(84:2:84:9)> <hasArg(0)> <DeclRefExpr(84:7:84:7)> .
<ImplicitCastExpr(84:2:84:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(84:2:84:2)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(84:2:84:2)> <hasSubExpr> <DeclRefExpr(84:2:84:2)> .
<DeclRefExpr(84:2:84:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(84:2:84:2)> <hasDecl> <Function(483:1:55:54)> .
<DeclRefExpr(84:2:84:2)> <hasName> "free" .
<ImplicitCastExpr(84:7:84:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(84:7:84:7)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(84:7:84:7)> <hasSubExpr> <ImplicitCastExpr(84:7:84:7)> .
<ImplicitCastExpr(84:7:84:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(84:7:84:7)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(84:7:84:7)> <hasSubExpr> <DeclRefExpr(84:7:84:7)> .
<DeclRefExpr(84:7:84:7)> <isa> "DeclRefExpr" .
<DeclRefExpr(84:7:84:7)> <hasDecl> <Var(37:2:37:47)> .
<DeclRefExpr(84:7:84:7)> <hasName> "pl" .
<CallExpr(85:2:85:10)> <isa> "CallExpr" .
<CallExpr(85:2:85:10)> <inProc> <Function(28:1:89:1)> .
<CallExpr(85:2:85:10)> <callsFunc> <Function(483:1:55:54)> .
<CallExpr(85:2:85:10)> <calls> "free" .
<CallExpr(85:2:85:10)> <hasArg(0)> <DeclRefExpr(85:7:85:7)> .
<ImplicitCastExpr(85:2:85:2)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(85:2:85:2)> <hasCastKind> "FunctionToPointerDecay" .
<ImplicitCastExpr(85:2:85:2)> <hasSubExpr> <DeclRefExpr(85:2:85:2)> .
<DeclRefExpr(85:2:85:2)> <isa> "DeclRefExpr" .
<DeclRefExpr(85:2:85:2)> <hasDecl> <Function(483:1:55:54)> .
<DeclRefExpr(85:2:85:2)> <hasName> "free" .
<ImplicitCastExpr(85:7:85:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(85:7:85:7)> <hasCastKind> "BitCast" .
<ImplicitCastExpr(85:7:85:7)> <hasSubExpr> <ImplicitCastExpr(85:7:85:7)> .
<ImplicitCastExpr(85:7:85:7)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(85:7:85:7)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(85:7:85:7)> <hasSubExpr> <DeclRefExpr(85:7:85:7)> .
<DeclRefExpr(85:7:85:7)> <isa> "DeclRefExpr" .
<DeclRefExpr(85:7:85:7)> <hasDecl> <Var(38:2:38:9)> .
<DeclRefExpr(85:7:85:7)> <hasName> "pl2" .
<ReturnStmt(87:2:87:9)> <isa> "ReturnStmt" .
<ReturnStmt(87:2:87:9)> <returns> <DeclRefExpr(87:9:87:9)> .
<ReturnStmt(87:2:87:9)> <inProc> <Function(28:1:89:1)> .
<ImplicitCastExpr(87:9:87:9)> <isa> "ImplicitCastExpr" .
<ImplicitCastExpr(87:9:87:9)> <hasCastKind> "LValueToRValue" .
<ImplicitCastExpr(87:9:87:9)> <hasSubExpr> <DeclRefExpr(87:9:87:9)> .
<DeclRefExpr(87:9:87:9)> <isa> "DeclRefExpr" .
<DeclRefExpr(87:9:87:9)> <hasDecl> <Var(29:2:29:6)> .
<DeclRefExpr(87:9:87:9)> <hasName> "c" .
